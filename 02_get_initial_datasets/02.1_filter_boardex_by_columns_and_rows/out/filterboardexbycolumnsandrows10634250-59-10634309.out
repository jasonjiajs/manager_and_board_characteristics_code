-----------------------------------------------------------
Output from Shell Script:
Job ID: 10634309
Job User: jasonjia
Num Cores: 1
Array(Task ID): 59 of 64
Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: openpyxl in /home/jasonjia/.local/lib/python3.8/site-packages (3.1.2)
Requirement already satisfied: et-xmlfile in /home/jasonjia/.local/lib/python3.8/site-packages (from openpyxl) (1.1.0)

[notice] A new release of pip is available: 23.0.1 -> 23.1.2
[notice] To update, run: pip install --upgrade pip
Program Path: filter_boardex_by_columns_and_rows.py
Filepath of .xslx containing list of columns in Boardex and ExecuComp: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_colstokeep/List_of_Variables_for_Boardex_and_Execucomp_010523.xlsx
Filepath to list of company IDs we want to filter by: /project/kh_mercury_1/manager_and_board_characteristics/output/01_convert_isins_and_gvkeys_to_boardex_companyids/companyids_to_search_for/companyids_to_search_for.xlsx
Input Folder: /project/kh_mercury_1/manager_and_board_characteristics/data/boardex
Output Folder: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows
-----------------------------------------------------------
Output from Python Script:
This is array 59 / 64
Filepath of .xslx containing list of columns in Boardex and ExecuComp: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_colstokeep/List_of_Variables_for_Boardex_and_Execucomp_010523.xlsx
Filepath to list of company IDs we want to filter by: /project/kh_mercury_1/manager_and_board_characteristics/output/01_convert_isins_and_gvkeys_to_boardex_companyids/companyids_to_search_for/companyids_to_search_for.xlsx
Input Folder (containing raw BoardEx .xlsx files): /project/kh_mercury_1/manager_and_board_characteristics/data/boardex
Output Folder (after we filter by both columns and rows): /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows
Total number of files in input folder: 3246
This process will cover file(s): 2901 to 2950
-----------------------------------------------------------
File name (kept): UK - SMDEs Compensation - 2015.xlsx
Unique workbook name: SMDEs Compensation
List of sheets to open: ['Summary']
------
Sheet 0 : Summary
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (139, 16)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*',
       'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked',
       'Total Compensation', 'Total Wealth'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*', 'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked', 'Total Compensation', 'Total Wealth']
df.shape: (139, 16)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (35, 16)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Compensation - 2015.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Compensation - Current.xlsx
Unique workbook name: Compensation
List of sheets to open: ['Summary']
------
Sheet 0 : Summary
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (10416, 16)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*',
       'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked',
       'Total Compensation', 'Total Wealth'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*', 'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked', 'Total Compensation', 'Total Wealth']
df.shape: (10416, 16)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (1935, 16)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Compensation - Current.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Compensation - 2001.xlsx
Unique workbook name: Compensation
List of sheets to open: ['Summary']
------
Sheet 0 : Summary
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (6584, 16)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*',
       'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked',
       'Total Compensation', 'Total Wealth'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*', 'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked', 'Total Compensation', 'Total Wealth']
df.shape: (6584, 16)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (1437, 16)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Compensation - 2001.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Compensation - 2008.xlsx
Unique workbook name: SMDEs Compensation
List of sheets to open: ['Summary']
------
Sheet 0 : Summary
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (141, 16)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*',
       'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked',
       'Total Compensation', 'Total Wealth'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*', 'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked', 'Total Compensation', 'Total Wealth']
df.shape: (141, 16)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (39, 16)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Compensation - 2008.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Compensation - 2006.xlsx
Unique workbook name: Compensation
List of sheets to open: ['Summary']
------
Sheet 0 : Summary
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (13481, 16)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*',
       'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked',
       'Total Compensation', 'Total Wealth'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*', 'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked', 'Total Compensation', 'Total Wealth']
df.shape: (13481, 16)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (1772, 16)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Compensation - 2006.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Compensation - 2018.xlsx
Unique workbook name: SMDEs Compensation
List of sheets to open: ['Summary']
------
Sheet 0 : Summary
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (207, 16)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*',
       'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked',
       'Total Compensation', 'Total Wealth'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Company Name', 'CompanyID*', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'Director Name', 'DirectorID*', 'Director Role', 'ED/SD', 'Direct Compensation', 'Equity Linked', 'Total Compensation', 'Total Wealth']
df.shape: (207, 16)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (61, 16)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Compensation - 2018.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Director Profile - Employment Current NonBoard.xlsx
Unique workbook name: Director Profile - Employment Current NonBoard
List of sheets to open: ['Current Non Board Role']
------
Sheet 0 : Current Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (29665, 14)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date']
df.shape: (29665, 14)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (1098, 14)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Director Profile - Employment Current NonBoard.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Profile - Employment Current NonBoard.xlsx
Unique workbook name: SMDEs Profile - Employment Current NonBoard
List of sheets to open: ['Current Non Board Role']
------
Sheet 0 : Current Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (85137, 14)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date']
df.shape: (85137, 14)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (4601, 14)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Profile - Employment Current NonBoard.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Profile - Characteristics.xlsx
Unique workbook name: SMDEs Profile - Characteristics
List of sheets to open: ['Charcteristics']
------
Sheet 0 : Charcteristics
% NaNs in first row: 73.3 > 30%, taking category = row 0 and variable name = row 1
df.shape: (366885, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender',
       'Nationality', 'Annual Report Year', 'Boards to Date - Quoted',
       'Boards to Date - Private', 'Boards to Date - Other',
       'Current Boards - Quoted', 'Current Boards - Private',
       'Current Boards - Other', 'Avg Years on Quoted Boards'],
      dtype='object')
List of cols to keep (after processing): ['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender', 'Nationality', 'Annual Report Year', 'Boards to Date - Quoted', 'Boards to Date - Private', 'Boards to Date - Other', 'Current Boards - Quoted', 'Current Boards - Private', 'Current Boards - Other', 'Avg Years on Quoted Boards']
df.shape: (366885, 15)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (366885, 15)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Profile - Characteristics.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Company Details.xlsx
Unique workbook name: Company Details
List of sheets to open: ['Company Details']
------
Sheet 0 : Company Details
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (5477, 21)
---
Filtering df by columns:
---
df.columns (after processing): Index(['CompanyID*', 'Company Name', 'HOAddress1', 'HOAddress2', 'HOAddress3',
       'HOAddress4', 'HOAddress5', 'HOCountryName', 'HO TelNumber',
       'HO FaxNumber', 'HO URL', 'CIK Code', 'ISIN', 'Ticker', 'Index',
       'Sector', 'Market Cap', 'Revenue at Year End', 'Latest AR', 'Auditors',
       'Bankers'],
      dtype='object')
List of cols to keep (after processing): ['CompanyID*', 'Company Name', 'HOAddress1', 'HOAddress2', 'HOAddress3', 'HOAddress4', 'HOAddress5', 'HOCountryName', 'HO TelNumber', 'HO FaxNumber', 'HO URL', 'CIK Code', 'ISIN', 'Ticker', 'Index', 'Sector', 'Market Cap', 'Latest AR', 'Auditors', 'Bankers']
df.shape: (5477, 20)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (248, 20)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Company Details.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Org Analysis Averages.xlsx
Unique workbook name: Org Analysis Averages
List of sheets to open: ['Org Analysis Averages']
------
Sheet 0 : Org Analysis Averages
% NaNs in first row: 93.5 > 30%, taking category = row 0 and variable name = row 1
df.shape: (48466, 77)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Organisation Analysis & Averages - Company Name',
       'Organisation Analysis & Averages - CompanyID*',
       'Organisation Analysis & Averages - ISIN',
       'Organisation Analysis & Averages - Ticker',
       'Organisation Analysis & Averages - Index',
       'Organisation Analysis & Averages - Sector',
       'Organisation Analysis & Averages - Country',
       'Organisation Analysis & Averages - Report Year',
       'Organisation Analysis & Averages - Total Number of Board Members',
       'Organisation Analysis & Averages - Total Number of EDs',
       'Organisation Analysis & Averages - Total Number of NEDs',
       'Organisation Analysis & Averages - Independent SD Ratio',
       'Organisation Analysis & Averages - CEO and Chairman Roles are combined on the Board',
       'Organisation Analysis & Averages - Average Salary EDs',
       'Organisation Analysis & Averages - Average Salary NEDs',
       'Organisation Analysis & Averages - Average Bonus EDs',
       'Organisation Analysis & Averages - Average Bonus NEDs',
       'Organisation Analysis & Averages - Average Total Direct Compensation for EDs',
       'Organisation Analysis & Averages - Average Total Direct Compensation for NEDs',
       'Organisation Analysis & Averages - Average Equity-Linked Shares for EDs',
       'Organisation Analysis & Averages - Average Equity-Linked Shares for NEDs',
       'Organisation Analysis & Averages - Average Equity-Linked LTIPs for EDs',
       'Organisation Analysis & Averages - Average Equity-Linked LTIPs for NEDs',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -intrinsic',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -intrinsic',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -estimated',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -estimated',
       'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for EDs',
       'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for NEDs',
       'Organisation Analysis & Averages - Average Wealth Shares EDs',
       'Organisation Analysis & Averages - ED Total Wealth Shares',
       'Organisation Analysis & Averages - Average Wealth Shares NEDs',
       'Organisation Analysis & Averages - NED Total Wealth Shares',
       'Organisation Analysis & Averages - Average Wealth LTIPs EDs',
       'Organisation Analysis & Averages - ED Total Wealth LTIPS',
       'Organisation Analysis & Averages - Average Wealth LTIPs NEDs',
       'Organisation Analysis & Averages - NED Total Wealth LTIPS',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -intrinsic',
       'Organisation Analysis & Averages - ED Total Wealth Shares under Options  -intrinsic',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs -intrinsic',
       'Organisation Analysis & Averages - NED Total Wealth Shares under Options -intrinsic',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -estimated',
       'Organisation Analysis & Averages - ED Total Wealth Shares under Options - estimated',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs - estimated',
       'Organisation Analysis & Averages - NED Total Wealth Shares under Options - estimated',
       'Organisation Analysis & Averages - Liquid Wealth ED Average',
       'Organisation Analysis & Averages - Liquid Wealth ED Total',
       'Organisation Analysis & Averages - Liquid Wealth NED Average',
       'Organisation Analysis & Averages - Liquid Wealth NED Total',
       'Organisation Analysis & Averages - Average time in role for EDs',
       'Organisation Analysis & Averages - Average time in role for NEDs',
       'Average Boards to Date ED's - Quoted',
       'Average Boards to Date ED's - Private',
       'Average Boards to Date ED's - Other',
       'Average Boards to Date NED's - Quoted',
       'Average Boards to Date NED's - Private',
       'Average Boards to Date NED's - Other',
       'Average Boards Currently ED's - Quoted',
       'Average Boards Currently ED's - Private',
       'Average Boards Currently ED's - Other',
       'Average Boards Currently NED's - Quoted',
       'Average Boards Currently NED's - Private',
       'Average Boards Currently NED's - Other',
       'Average Boards Currently NED's - Average years on Other Quoted Boards EDs',
       'Average Boards Currently NED's - Average years on Other Quoted Boards NEDs',
       'Average Boards Currently NED's - Average Age EDs',
       'Average Boards Currently NED's - Average Age NEDs',
       'Average Boards Currently NED's - Average Number of Education EDs',
       'Average Boards Currently NED's - Average Number of Education NED',
       'Average Boards Currently NED's - Gender (% Male) EDs',
       'Average Boards Currently NED's - Gender (% Male) NED',
       'Average Boards Currently NED's - Nationality Mix ED',
       'Average Boards Currently NED's - Nationality Mix NED',
       'Average Boards Currently NED's - Attrition (%) 1 Year ED',
       'Average Boards Currently NED's - Attrition (%) 1 Year NED',
       'Average Boards Currently NED's - Attrition (%) 3 Year ED',
       'Average Boards Currently NED's - Attrition (%) 3 Year NED'],
      dtype='object')
List of cols to keep (after processing): ['Organisation Analysis & Averages - Company Name', 'Organisation Analysis & Averages - CompanyID*', 'Organisation Analysis & Averages - ISIN', 'Organisation Analysis & Averages - Ticker', 'Organisation Analysis & Averages - Index', 'Organisation Analysis & Averages - Sector', 'Organisation Analysis & Averages - Country', 'Organisation Analysis & Averages - Report Year', 'Organisation Analysis & Averages - Total Number of Board Members', 'Organisation Analysis & Averages - Total Number of EDs', 'Organisation Analysis & Averages - Total Number of NEDs', 'Organisation Analysis & Averages - Independent SD Ratio', 'Organisation Analysis & Averages - CEO and Chairman Roles are combined on the Board', 'Organisation Analysis & Averages - Average Salary EDs', 'Organisation Analysis & Averages - Average Salary NEDs', 'Organisation Analysis & Averages - Average Bonus EDs', 'Organisation Analysis & Averages - Average Bonus NEDs', 'Organisation Analysis & Averages - Average Total Direct Compensation for EDs', 'Organisation Analysis & Averages - Average Total Direct Compensation for NEDs', 'Organisation Analysis & Averages - Average Equity-Linked Shares for EDs', 'Organisation Analysis & Averages - Average Equity-Linked Shares for NEDs', 'Organisation Analysis & Averages - Average Equity-Linked LTIPs for EDs', 'Organisation Analysis & Averages - Average Equity-Linked LTIPs for NEDs', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -intrinsic', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -intrinsic', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -estimated', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -estimated', 'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for EDs', 'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for NEDs', 'Organisation Analysis & Averages - Average Wealth Shares EDs', 'Organisation Analysis & Averages - ED Total Wealth Shares', 'Organisation Analysis & Averages - Average Wealth Shares NEDs', 'Organisation Analysis & Averages - NED Total Wealth Shares', 'Organisation Analysis & Averages - Average Wealth LTIPs EDs', 'Organisation Analysis & Averages - ED Total Wealth LTIPS', 'Organisation Analysis & Averages - Average Wealth LTIPs NEDs', 'Organisation Analysis & Averages - NED Total Wealth LTIPS', 'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -intrinsic', 'Organisation Analysis & Averages - ED Total Wealth Shares under Options\xa0 -intrinsic', 'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs -intrinsic', 'Organisation Analysis & Averages - NED Total Wealth Shares under Options -intrinsic', 'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -estimated', 'Organisation Analysis & Averages - ED Total Wealth Shares under Options - estimated', 'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs - estimated', 'Organisation Analysis & Averages - NED Total Wealth Shares under Options - estimated', 'Organisation Analysis & Averages - Liquid Wealth ED Average', 'Organisation Analysis & Averages - Liquid Wealth ED Total', 'Organisation Analysis & Averages - Liquid Wealth NED Average', 'Organisation Analysis & Averages - Liquid Wealth NED Total', 'Organisation Analysis & Averages - Average time in role for EDs', 'Organisation Analysis & Averages - Average time in role for NEDs', "Average Boards Currently NED's - Average Age EDs", "Average Boards Currently NED's - Average Age NEDs", "Average Boards Currently NED's - Average Number of Education EDs", "Average Boards Currently NED's - Average Number of Education NED", "Average Boards Currently NED's - Gender (% Male) EDs", "Average Boards Currently NED's - Gender (% Male) NED", "Average Boards Currently NED's - Nationality Mix ED", "Average Boards Currently NED's - Nationality Mix NED", "Average Boards Currently NED's - Attrition (%) 1 Year ED", "Average Boards Currently NED's - Attrition (%) 1 Year NED", "Average Boards Currently NED's - Attrition (%) 3 Year ED", "Average Boards Currently NED's - Attrition (%) 3 Year NED"]
df.shape: (48466, 63)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (4405, 63)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Org Analysis Averages.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Profile - Employment Current Board.xlsx
Unique workbook name: SMDEs Profile - Employment Current Board
List of sheets to open: ['Current Board Role']
------
Sheet 0 : Current Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (32321, 16)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date',
       'Committee Name', 'Committee Role'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date', 'Committee Name', 'Committee Role']
df.shape: (32321, 16)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (2110, 16)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Profile - Employment Current Board.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Director Profile - Education & Achievements.xlsx
Unique workbook name: Director Profile - Education & Achievements
List of sheets to open: ['Education', 'Achievements']
------
Sheet 0 : Education
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (72981, 9)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'InstitutionID*',
       'Institution Name', 'Company Type', 'Qualification',
       'Qualification Description', 'Qualification Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'InstitutionID*', 'Institution Name', 'Company Type', 'Qualification', 'Qualification Description', 'Qualification Date']
df.shape: (72981, 9)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (72981, 9)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Director Profile - Education & Achievements_Education.xlsx
Done!
------
Sheet 1 : Achievements
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (36256, 7)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'OrganisationID*',
       'OrganisationName', 'Achievement Date', 'Award/Achievement'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'OrganisationID*', 'OrganisationName', 'Achievement Date', 'Award/Achievement']
df.shape: (36256, 7)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (36256, 7)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Director Profile - Education & Achievements_Achievements.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Director Profile - Other Activities.xlsx
Unique workbook name: Director Profile - Other Activities
List of sheets to open: ['Current Other Activities Tab']
------
Sheet 0 : Current Other Activities Tab
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (40387, 8)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Role', 'Role Description', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*']
df.shape: (40387, 4)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (3, 4)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Director Profile - Other Activities.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Org Summary.xlsx
Unique workbook name: SMDEs Org Summary
List of sheets to open: ['Board Summary']
------
Sheet 0 : Board Summary
% NaNs in first row: 83.6 > 30%, taking category = row 0 and variable name = row 1
df.shape: (379349, 61)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN',
       'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*',
       'Individual Name', 'Characteristics of Roles - Individual Role',
       'Characteristics of Roles - Director Network Size',
       'Characteristics of Roles - Time to Retirement',
       'Characteristics of Roles - Time in Role',
       'Characteristics of Roles - Time on Board',
       'Characteristics of Roles - Time in Company',
       'Director Experience - Total Number of Quoted Boards to Date',
       'Director Experience - Total Number of Private Boards to Date',
       'Director Experience - Total Number of Other Boards to Date',
       'Director Experience - Total Number of Quoted Current Boards',
       'Director Experience - Total Number of Private Current Boards',
       'Director Experience - Total Number of Other Current Boards',
       'Director Experience - Avg. Yrs on Other Quoted Boards',
       'Director Experience - Age (Yrs)',
       'Director Experience - Number of Qualifications',
       'Director Experience - Gender', 'Director Experience - Nationality Mix',
       'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total',
       'Ratios - Performance/ Total', 'Ratios - %Change from Last Period',
       'Ratios - Wealth Delta', 'Annual Direct Compensation - Salary',
       'Annual Direct Compensation - Bonus',
       'Annual Direct Compensation - D.C Pension',
       'Annual Direct Compensation - Other',
       'Annual Direct Compensation - Total Salary+Bonus',
       'Annual Direct Compensation - Total Inc. D.C. Pension & Other',
       'Annual- Equity Linked Options - Shares',
       'Annual- Equity Linked Options - LTIPS(max)',
       'Annual- Equity Linked Options - Vesting Date',
       'Annual- Equity Linked Options - Intrinsic Options (excercisable)',
       'Annual- Equity Linked Options - Intrinsic Options (unexercisable)',
       'Annual- Equity Linked Options - Estimated Options (exercisable)',
       'Annual- Equity Linked Options - Estimated Options (unexcercisable)',
       'Annual- Equity Linked Options - Share Price',
       'Annual- Equity Linked Options - Total Equity Linked Compensation',
       'Total - Total Annual Compensation', 'Accumulated Wealth - Shares',
       'Accumulated Wealth - LTIPS(max)',
       'Accumulated Wealth - Intrinsic Option',
       'Accumulated Wealth - Estimated Option',
       'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth',
       'Committee Members - AUDIT COMMITTEE MEMBER (if yes then put M)',
       'Committee Members - REMUNERATION/ COMPENSATION COMMITTEE MEMBER',
       'Committee Members - NOMINATION COMMITTEE MEMBER',
       'Committee Size - AUDIT COMMITTEE SIZE',
       'Committee Size - REMUNERATION/ COMPENSATION COMMITTEE SIZE',
       'Committee Size - NOMINATION COMMITTEE SIZE'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*', 'Individual Name', 'Characteristics of Roles - Individual Role', 'Characteristics of Roles - Director Network Size', 'Characteristics of Roles - Time to Retirement', 'Characteristics of Roles - Time in Role', 'Characteristics of Roles - Time on Board', 'Characteristics of Roles - Time in Company', 'Director Experience - Total Number of Quoted Boards to Date', 'Director Experience - Total Number of Private Boards to Date', 'Director Experience - Total Number of Other Boards to Date', 'Director Experience - Total Number of Quoted Current Boards', 'Director Experience - Total Number of Private Current Boards', 'Director Experience - Total Number of Other Current Boards', 'Director Experience - Avg. Yrs on Other Quoted Boards', 'Director Experience - Age (Yrs)', 'Director Experience - Number of Qualifications', 'Director Experience - Gender', 'Director Experience - Nationality Mix', 'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total', 'Ratios - Performance/ Total', 'Ratios - %Change from Last Period', 'Ratios - Wealth Delta', 'Annual Direct Compensation - Salary', 'Annual Direct Compensation - Bonus', 'Annual Direct Compensation - D.C Pension', 'Annual Direct Compensation - Other', 'Annual Direct Compensation - Total Salary+Bonus', 'Annual Direct Compensation - Total Inc. D.C. Pension & Other', 'Annual- Equity Linked Options - Shares', 'Annual- Equity Linked Options - LTIPS(max)', 'Annual- Equity Linked Options - Vesting Date', 'Annual- Equity Linked Options - Intrinsic Options (excercisable)', 'Annual- Equity Linked Options - Intrinsic Options (unexercisable)', 'Annual- Equity Linked Options - Estimated Options (exercisable)', 'Annual- Equity Linked Options - Estimated Options (unexcercisable)', 'Annual- Equity Linked Options - Share Price', 'Annual- Equity Linked Options - Total Equity Linked Compensation', 'Total - Total Annual Compensation', 'Accumulated Wealth - Shares', 'Accumulated Wealth - LTIPS(max)', 'Accumulated Wealth - Intrinsic Option', 'Accumulated Wealth - Estimated Option', 'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth']
df.shape: (379349, 55)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (65456, 55)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Org Summary.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Director Details Mapping File.xlsx
Unique workbook name: Director Details Mapping File
List of sheets to open: ['Sheet1']
------
Sheet 0 : Sheet1
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (49659, 3)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Bex Dir ID', 'DirectorID*', 'Director Name'], dtype='object')
List of cols to keep (after processing): ['Bex Dir ID', 'DirectorID*', 'Director Name']
df.shape: (49659, 3)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (49659, 3)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Director Details Mapping File.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Committee Details.xlsx
Unique workbook name: SMDEs Committee Details
List of sheets to open: [1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 'Current']
------
Sheet 0 : 1999
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (11, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (11, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (11, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 1 : 2000
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (18, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (18, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (18, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 2 : 2001
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (14, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (14, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (14, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 3 : 2002
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (15, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (15, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (15, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 4 : 2003
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (23, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (23, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (23, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 5 : 2004
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (26, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (26, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (26, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 6 : 2005
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (15, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (15, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (15, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 7 : 2006
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (24, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (24, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (24, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 8 : 2007
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (21, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (21, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (21, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 9 : 2008
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (25, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (25, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (25, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 10 : 2009
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (34, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (34, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (34, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 11 : 2010
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (31, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (31, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (31, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 12 : 2011
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (57, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (57, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (57, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 13 : 2012
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (59, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (59, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (59, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 14 : 2013
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (79, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (79, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (79, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 15 : 2014
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (30, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (30, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (30, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 16 : 2015
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (18, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (18, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (18, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 17 : 2016
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (35, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (35, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (35, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 18 : 2017
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (28, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (28, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (28, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 19 : 2018
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (28, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (28, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (28, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 20 : 2019
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (17, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (17, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (17, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 21 : 2020
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (4, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (4, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (4, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 22 : 2021
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (0, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (0, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (0, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 23 : Current
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (12, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name', 'Director Type']
df.shape: (12, 11)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (3, 11)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Committee Details_Current.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Director Profile - Employment Historical Board.xlsx
Unique workbook name: Director Profile - Employment Historical Board
List of sheets to open: ['Historic Board Role']
------
Sheet 0 : Historic Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (425155, 17)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date',
       'End Date', 'Committee Name', 'Committee Role'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description']
df.shape: (425155, 12)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (39139, 12)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Director Profile - Employment Historical Board.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Company Announcements.xlsx
Unique workbook name: SMDEs Company Announcements
List of sheets to open: ['Announcements']
------
Sheet 0 : Announcements
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (7509, 10)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Announcement Date', 'Effective Date', 'CompanyID*', 'Company Name',
       'ISIN', 'DirectorID*', 'Director Name', 'Gender', 'Role',
       'Description'],
      dtype='object')
List of cols to keep (after processing): ['CompanyID*', 'Company Name', 'ISIN', 'DirectorID*', 'Director Name']
df.shape: (7509, 5)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (2643, 5)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Company Announcements.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Profile - Education & Achievements.xlsx
Unique workbook name: SMDEs Profile - Education & Achievements
List of sheets to open: ['Education', 'Achievements']
------
Sheet 0 : Education
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (111191, 9)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'InstitutionID*',
       'Institution Name', 'Company Type', 'Qualification',
       'Qualification Description', 'Qualification Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'InstitutionID*', 'Institution Name', 'Company Type', 'Qualification', 'Qualification Description', 'Qualification Date']
df.shape: (111191, 9)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (111191, 9)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Profile - Education & Achievements_Education.xlsx
Done!
------
Sheet 1 : Achievements
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (37669, 7)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'OrganisationID*',
       'OrganisationName', 'Achievement Date', 'Award/Achievement'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'OrganisationID*', 'OrganisationName', 'Achievement Date', 'Award/Achievement']
df.shape: (37669, 7)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (37669, 7)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Profile - Education & Achievements_Achievements.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Profile - Employment Historical Board.xlsx
Unique workbook name: SMDEs Profile - Employment Historical Board
List of sheets to open: ['Historic Board Role']
------
Sheet 0 : Historic Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (91201, 17)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date',
       'End Date', 'Committee Name', 'Committee Role'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description']
df.shape: (91201, 12)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (5990, 12)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Profile - Employment Historical Board.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Committee Details.xlsx
Unique workbook name: Committee Details
List of sheets to open: [1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 'Current']
------
Sheet 0 : 1999
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (4339, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (4339, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (4339, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 1 : 2000
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (6541, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (6541, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (6541, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 2 : 2001
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (7872, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (7872, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (7872, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 3 : 2002
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (8945, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (8945, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (8945, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 4 : 2003
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (10375, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (10375, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (10375, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 5 : 2004
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (11930, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (11930, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (11930, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 6 : 2005
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (13949, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (13949, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (13949, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 7 : 2006
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (15767, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (15767, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (15767, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 8 : 2007
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (16700, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (16700, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (16700, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 9 : 2008
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (16206, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (16206, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (16206, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 10 : 2009
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (15447, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (15447, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (15447, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 11 : 2010
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (15636, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (15636, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (15636, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 12 : 2011
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (16146, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (16146, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (16146, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 13 : 2012
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (16391, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (16391, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (16391, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 14 : 2013
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (17119, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (17119, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (17119, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 15 : 2014
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (18278, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (18278, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (18278, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 16 : 2015
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (18812, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (18812, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (18812, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 17 : 2016
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (19806, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (19806, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (19806, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 18 : 2017
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (20487, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (20487, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (20487, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 19 : 2018
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (21684, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (21684, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (21684, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 20 : 2019
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (22041, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (22041, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (22041, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 21 : 2020
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (14352, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (14352, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (14352, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 22 : 2021
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (0, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (0, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (0, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 23 : Current
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (21020, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name', 'Director Type']
df.shape: (21020, 11)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (3484, 11)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Committee Details_Current.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Profile - Other Activities.xlsx
Unique workbook name: SMDEs Profile - Other Activities
List of sheets to open: ['Current Other Activities Tab']
------
Sheet 0 : Current Other Activities Tab
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (46865, 8)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Role', 'Role Description', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*']
df.shape: (46865, 4)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (1, 4)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Profile - Other Activities.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Profile - Employment Historical NonBoard.xlsx
Unique workbook name: SMDEs Profile - Employment Historical NonBoard
List of sheets to open: ['Historic Non Board Role']
------
Sheet 0 : Historic Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (411682, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date',
       'End Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index']
df.shape: (411682, 8)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (41289, 8)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Profile - Employment Historical NonBoard.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Director Profile - Characteristics.xlsx
Unique workbook name: Director Profile - Characteristics
List of sheets to open: ['Charcteristics']
------
Sheet 0 : Charcteristics
% NaNs in first row: 73.3 > 30%, taking category = row 0 and variable name = row 1
df.shape: (263123, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender',
       'Nationality', 'Annual Report Year', 'Boards to Date - Quoted',
       'Boards to Date - Private', 'Boards to Date - Other',
       'Current Boards - Quoted', 'Current Boards - Private',
       'Current Boards - Other', 'Avg Years on Quoted Boards'],
      dtype='object')
List of cols to keep (after processing): ['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender', 'Nationality', 'Annual Report Year', 'Boards to Date - Quoted', 'Boards to Date - Private', 'Boards to Date - Other', 'Current Boards - Quoted', 'Current Boards - Private', 'Current Boards - Other', 'Avg Years on Quoted Boards']
df.shape: (263123, 15)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (263123, 15)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Director Profile - Characteristics.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - SMDEs Mapping File.xlsx
Unique workbook name: SMDEs Mapping File
List of sheets to open: ['Sheet1']
------
Sheet 0 : Sheet1
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (84268, 3)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Bex Dir ID', 'DirectorID*', 'Director Name'], dtype='object')
List of cols to keep (after processing): ['Bex Dir ID', 'DirectorID*', 'Director Name']
df.shape: (84268, 3)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (84268, 3)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - SMDEs Mapping File.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Board Summary.xlsx
Unique workbook name: Board Summary
List of sheets to open: ['Board Summary']
------
Sheet 0 : Board Summary
% NaNs in first row: 82.2 > 30%, taking category = row 0 and variable name = row 1
df.shape: (323202, 73)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN',
       'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*',
       'Individual Name', 'Characteristics of Roles - Individual Role',
       'Characteristics of Roles - Director Network Size',
       'Characteristics of Roles - Time to Retirement',
       'Characteristics of Roles - Time in Role',
       'Characteristics of Roles - Time on Board',
       'Characteristics of Roles - Time in Company',
       'Director Experience - Total Number of Quoted Boards to Date',
       'Director Experience - Total Number of Private Boards to Date',
       'Director Experience - Total Number of Other Boards to Date',
       'Director Experience - Total Number of Quoted Current Boards',
       'Director Experience - Total Number of Private Current Boards',
       'Director Experience - Total Number of Other Current Boards',
       'Director Experience - Avg. Yrs on Other Quoted Boards',
       'Director Experience - Age (Yrs)',
       'Director Experience - Number of Qualifications',
       'Director Experience - Gender', 'Director Experience - Nationality Mix',
       'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total',
       'Ratios - Performance/ Total', 'Ratios - %Change from Last Period',
       'Ratios - Wealth Delta',
       'Director Count Totals - Total Directors on the Board',
       'Director Count Totals - Number of SDs on Board',
       'Director Count Totals - Number of Independent NED on Board',
       'Director Count Totals - Executive Chairman present on Board or Combined role of CEO & Chairman is present (1- Yes, 0 - No)',
       'Director Count Totals - Number of Independent NED with past CFO/FD role',
       'Annual Direct Compensation - Salary',
       'Annual Direct Compensation - Bonus',
       'Annual Direct Compensation - D.C Pension',
       'Annual Direct Compensation - Other',
       'Annual Direct Compensation - Total Salary+Bonus',
       'Annual Direct Compensation - Total Inc. D.C. Pension & Other',
       'Annual- Equity Linked Options - Shares',
       'Annual- Equity Linked Options - LTIPS(max)',
       'Annual- Equity Linked Options - Vesting Date',
       'Annual- Equity Linked Options - Intrinsic Options (excercisable)',
       'Annual- Equity Linked Options - Intrinsic Options (unexercisable)',
       'Annual- Equity Linked Options - Estimated Options (exercisable)',
       'Annual- Equity Linked Options - Estimated Options (unexcercisable)',
       'Annual- Equity Linked Options - Share Price',
       'Annual- Equity Linked Options - Total Equity Linked Compensation',
       'Total - Total Annual Compensation', 'Accumulated Wealth - Shares',
       'Accumulated Wealth - LTIPS(max)',
       'Accumulated Wealth - Intrinsic Option',
       'Accumulated Wealth - Estimated Option',
       'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth',
       'Committee Members - AUDIT COMMITTEE MEMBER (if yes then put M)',
       'Committee Members - REMUNERATION/ COMPENSATION COMMITTEE MEMBER',
       'Committee Members - NOMINATION COMMITTEE MEMBER',
       'Committee Size - AUDIT COMMITTEE SIZE',
       'Committee Size - REMUNERATION/ COMPENSATION COMMITTEE SIZE',
       'Committee Size - NOMINATION COMMITTEE SIZE',
       'Number of Independent NEDs in Committee - Number of Independent NED on Audit Committee',
       'Number of Independent NEDs in Committee - Number of Independent NED on Remuneration/ Compensation Committee',
       'Number of Independent NEDs in Committee - Number of Independent NED on Nomination Committee',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Audit (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Remuneration/ Compensation (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Nomination (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED with functional expertise on Audit Committee'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*', 'Individual Name', 'Characteristics of Roles - Individual Role', 'Characteristics of Roles - Director Network Size', 'Characteristics of Roles - Time to Retirement', 'Characteristics of Roles - Time in Role', 'Characteristics of Roles - Time on Board', 'Characteristics of Roles - Time in Company', 'Director Experience - Total Number of Quoted Boards to Date', 'Director Experience - Total Number of Private Boards to Date', 'Director Experience - Total Number of Other Boards to Date', 'Director Experience - Total Number of Quoted Current Boards', 'Director Experience - Total Number of Private Current Boards', 'Director Experience - Total Number of Other Current Boards', 'Director Experience - Avg. Yrs on Other Quoted Boards', 'Director Experience - Age (Yrs)', 'Director Experience - Number of Qualifications', 'Director Experience - Gender', 'Director Experience - Nationality Mix', 'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total', 'Ratios - Performance/ Total', 'Ratios - %Change from Last Period', 'Ratios - Wealth Delta', 'Director Count Totals - Number of Independent NED with past CFO/FD role', 'Annual Direct Compensation - Salary', 'Annual Direct Compensation - Bonus', 'Annual Direct Compensation - D.C Pension', 'Annual Direct Compensation - Other', 'Annual Direct Compensation - Total Salary+Bonus', 'Annual Direct Compensation - Total Inc. D.C. Pension & Other', 'Annual- Equity Linked Options - Shares', 'Annual- Equity Linked Options - LTIPS(max)', 'Annual- Equity Linked Options - Vesting Date', 'Annual- Equity Linked Options - Intrinsic Options (excercisable)', 'Annual- Equity Linked Options - Intrinsic Options (unexercisable)', 'Annual- Equity Linked Options - Estimated Options (exercisable)', 'Annual- Equity Linked Options - Estimated Options (unexcercisable)', 'Annual- Equity Linked Options - Share Price', 'Annual- Equity Linked Options - Total Equity Linked Compensation', 'Total - Total Annual Compensation', 'Accumulated Wealth - Shares', 'Accumulated Wealth - LTIPS(max)', 'Accumulated Wealth - Intrinsic Option', 'Accumulated Wealth - Estimated Option', 'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth']
df.shape: (323202, 56)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (43362, 56)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Board Summary.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Director Profile - Employment Historical NonBoard.xlsx
Unique workbook name: Director Profile - Employment Historical NonBoard
List of sheets to open: ['Historic Non Board Role']
------
Sheet 0 : Historic Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (247038, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date',
       'End Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index']
df.shape: (247038, 8)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (23351, 8)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Director Profile - Employment Historical NonBoard.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Company Announcements.xlsx
Unique workbook name: Company Announcements
List of sheets to open: ['Announcements']
------
Sheet 0 : Announcements
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (48160, 10)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Announcement Date', 'Effective Date', 'CompanyID*', 'Company Name',
       'ISIN', 'DirectorID*', 'Director Name', 'Gender', 'Role',
       'Description'],
      dtype='object')
List of cols to keep (after processing): ['CompanyID*', 'Company Name', 'ISIN', 'DirectorID*', 'Director Name']
df.shape: (48160, 5)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (11238, 5)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Company Announcements.xlsx
Done!
-----------------------------------------------------------
File name (kept): UK - Director Profile - Employment Current Board.xlsx
Unique workbook name: Director Profile - Employment Current Board
List of sheets to open: ['Current Board Role']
------
Sheet 0 : Current Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (92248, 16)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date',
       'Committee Name', 'Committee Role'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date', 'Committee Name', 'Committee Role']
df.shape: (92248, 16)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (6863, 16)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/UK - Director Profile - Employment Current Board.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 23.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (492489, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (492489, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (50152, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 23.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 37.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499540, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (499540, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (47242, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 37.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 25.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499590, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (499590, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (79876, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 25.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 16.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (497558, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (497558, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (187090, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 16.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 31.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499137, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (499137, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (56101, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 31.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 32.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499232, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (499232, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (54781, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 32.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 17.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499564, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (499564, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (169294, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 17.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 45.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499984, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (499984, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (23865, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 45.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 14.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (496896, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (496896, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (141530, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 14.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 24.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499631, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (499631, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (64699, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 24.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 26.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (498323, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (498323, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (54372, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 26.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 46.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (223531, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (223531, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (10392, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 46.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 40.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499805, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (499805, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (40211, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 40.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 3.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499931, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (499931, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (233706, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 3.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 9.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (498677, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (498677, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (246090, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 9.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 39.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (498336, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (498336, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (28729, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 39.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 33.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (31034, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (31034, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (6029, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 33.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 20.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (498920, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (498920, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (212801, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 20.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Network - 29.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (492889, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (492889, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (46714, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 29.xlsx
Done!
-----------------------------------------------------------
/home/jasonjia/.local/lib/python3.8/site-packages/openpyxl/worksheet/_reader.py:329: UserWarning: Conditional Formatting extension is not supported and will be removed
  warn(msg)
File name (kept): NA - Company Network - 27.xlsx
Unique workbook name: Company Network
List of sheets to open: ['Company Network']
------
Sheet 0 : Company Network
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (497588, 26)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Start Company', 'Start CompanyID*', 'Start Company Index',
       'Start Company Sector', 'Start Company Country', 'Start Company Type',
       'Connected Company', 'Connected CompanyID*', 'Connected Company Index',
       'Connected Company Sector', 'Connected Company Country',
       'Connected Company Type', 'Director Name', 'DirectorID*',
       'Connected Company Current/Historic', 'Connected Company Duration',
       'Connected Company Role Name', 'ED/NED/Non-Brd',
       'Connected Company Role Start Date', 'Connected Company Role End Date',
       'Start Company Current/Historic', 'Start Company Duration',
       'Start Company Role', 'Start ED/NED/Non-Brd',
       'Start Company Role Start Date', 'Start Company Role End Date'],
      dtype='object')
List of cols to keep (after processing): ['Start Company', 'Start CompanyID*', 'Start Company Index', 'Start Company Sector', 'Start Company Country', 'Start Company Type', 'Connected Company', 'Connected CompanyID*', 'Connected Company Index', 'Connected Company Sector', 'Connected Company Country', 'Connected Company Type', 'Director Name', 'DirectorID*', 'Connected Company Current/Historic', 'Connected Company Duration', 'Connected Company Role Name', 'ED/NED/Non-Brd', 'Connected Company Role Start Date', 'Connected Company Role End Date', 'Start Company Current/Historic', 'Start Company Duration', 'Start Company Role', 'Start ED/NED/Non-Brd', 'Start Company Role Start Date', 'Start Company Role End Date']
df.shape: (497588, 26)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (51877, 26)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Network - 27.xlsx
Done!
-----------------------------------------------------------
List of files kept: ['UK - SMDEs Compensation - 2015.xlsx', 'UK - Compensation - Current.xlsx', 'UK - Compensation - 2001.xlsx', 'UK - SMDEs Compensation - 2008.xlsx', 'UK - Compensation - 2006.xlsx', 'UK - SMDEs Compensation - 2018.xlsx', 'UK - Director Profile - Employment Current NonBoard.xlsx', 'UK - SMDEs Profile - Employment Current NonBoard.xlsx', 'UK - SMDEs Profile - Characteristics.xlsx', 'UK - Company Details.xlsx', 'UK - Org Analysis Averages.xlsx', 'UK - SMDEs Profile - Employment Current Board.xlsx', 'UK - Director Profile - Education & Achievements.xlsx', 'UK - Director Profile - Other Activities.xlsx', 'UK - SMDEs Org Summary.xlsx', 'UK - Director Details Mapping File.xlsx', 'UK - SMDEs Committee Details.xlsx', 'UK - Director Profile - Employment Historical Board.xlsx', 'UK - SMDEs Company Announcements.xlsx', 'UK - SMDEs Profile - Education & Achievements.xlsx', 'UK - SMDEs Profile - Employment Historical Board.xlsx', 'UK - Committee Details.xlsx', 'UK - SMDEs Profile - Other Activities.xlsx', 'UK - SMDEs Profile - Employment Historical NonBoard.xlsx', 'UK - Director Profile - Characteristics.xlsx', 'UK - SMDEs Mapping File.xlsx', 'UK - Board Summary.xlsx', 'UK - Director Profile - Employment Historical NonBoard.xlsx', 'UK - Company Announcements.xlsx', 'UK - Director Profile - Employment Current Board.xlsx', 'NA - Company Network - 23.xlsx', 'NA - Company Network - 37.xlsx', 'NA - Company Network - 25.xlsx', 'NA - Company Network - 16.xlsx', 'NA - Company Network - 31.xlsx', 'NA - Company Network - 32.xlsx', 'NA - Company Network - 17.xlsx', 'NA - Company Network - 45.xlsx', 'NA - Company Network - 14.xlsx', 'NA - Company Network - 24.xlsx', 'NA - Company Network - 26.xlsx', 'NA - Company Network - 46.xlsx', 'NA - Company Network - 40.xlsx', 'NA - Company Network - 3.xlsx', 'NA - Company Network - 9.xlsx', 'NA - Company Network - 39.xlsx', 'NA - Company Network - 33.xlsx', 'NA - Company Network - 20.xlsx', 'NA - Company Network - 29.xlsx', 'NA - Company Network - 27.xlsx']
------
List of files not kept: []
Done!
