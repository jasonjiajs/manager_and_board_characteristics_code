-----------------------------------------------------------
Output from Shell Script:
Job ID: 10634300
Job User: jasonjia
Num Cores: 1
Array(Task ID): 50 of 64
Defaulting to user installation because normal site-packages is not writeable
Requirement already satisfied: openpyxl in /home/jasonjia/.local/lib/python3.8/site-packages (3.1.2)
Requirement already satisfied: et-xmlfile in /home/jasonjia/.local/lib/python3.8/site-packages (from openpyxl) (1.1.0)

[notice] A new release of pip is available: 23.0.1 -> 23.1.2
[notice] To update, run: pip install --upgrade pip
Program Path: filter_boardex_by_columns_and_rows.py
Filepath of .xslx containing list of columns in Boardex and ExecuComp: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_colstokeep/List_of_Variables_for_Boardex_and_Execucomp_010523.xlsx
Filepath to list of company IDs we want to filter by: /project/kh_mercury_1/manager_and_board_characteristics/output/01_convert_isins_and_gvkeys_to_boardex_companyids/companyids_to_search_for/companyids_to_search_for.xlsx
Input Folder: /project/kh_mercury_1/manager_and_board_characteristics/data/boardex
Output Folder: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows
-----------------------------------------------------------
Output from Python Script:
This is array 50 / 64
Filepath of .xslx containing list of columns in Boardex and ExecuComp: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_colstokeep/List_of_Variables_for_Boardex_and_Execucomp_010523.xlsx
Filepath to list of company IDs we want to filter by: /project/kh_mercury_1/manager_and_board_characteristics/output/01_convert_isins_and_gvkeys_to_boardex_companyids/companyids_to_search_for/companyids_to_search_for.xlsx
Input Folder (containing raw BoardEx .xlsx files): /project/kh_mercury_1/manager_and_board_characteristics/data/boardex
Output Folder (after we filter by both columns and rows): /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows
Total number of files in input folder: 3246
This process will cover file(s): 2451 to 2500
-----------------------------------------------------------
File name (kept): Europe - Company Announcements.xlsx
Unique workbook name: Company Announcements
List of sheets to open: ['Announcements']
------
Sheet 0 : Announcements
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (37174, 10)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Announcement Date', 'Effective Date', 'CompanyID*', 'Company Name',
       'ISIN', 'DirectorID*', 'Director Name', 'Gender', 'Role',
       'Description'],
      dtype='object')
List of cols to keep (after processing): ['CompanyID*', 'Company Name', 'ISIN', 'DirectorID*', 'Director Name']
df.shape: (37174, 5)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (11735, 5)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Company Announcements.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Profile - Characteristics - 1.xlsx
Unique workbook name: SMDEs Profile - Characteristics
List of sheets to open: ['Charcteristics']
------
Sheet 0 : Charcteristics
% NaNs in first row: 73.3 > 30%, taking category = row 0 and variable name = row 1
df.shape: (499995, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender',
       'Nationality', 'Annual Report Year', 'Boards to Date - Quoted',
       'Boards to Date - Private', 'Boards to Date - Other',
       'Current Boards - Quoted', 'Current Boards - Private',
       'Current Boards - Other', 'Avg Years on Quoted Boards'],
      dtype='object')
List of cols to keep (after processing): ['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender', 'Nationality', 'Annual Report Year', 'Boards to Date - Quoted', 'Boards to Date - Private', 'Boards to Date - Other', 'Current Boards - Quoted', 'Current Boards - Private', 'Current Boards - Other', 'Avg Years on Quoted Boards']
df.shape: (499995, 15)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (499995, 15)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Profile - Characteristics - 1.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Mapping File.xlsx
Unique workbook name: SMDEs Mapping File
List of sheets to open: ['Sheet1']
------
Sheet 0 : Sheet1
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (98118, 3)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Bex Dir ID', 'DirectorID*', 'Director Name'], dtype='object')
List of cols to keep (after processing): ['Bex Dir ID', 'DirectorID*', 'Director Name']
df.shape: (98118, 3)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (98118, 3)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Mapping File.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Org Summary - 2.xlsx
Unique workbook name: SMDEs Org Summary
List of sheets to open: ['Board Summary']
------
Sheet 0 : Board Summary
% NaNs in first row: 83.6 > 30%, taking category = row 0 and variable name = row 1
df.shape: (12270, 61)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN',
       'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*',
       'Individual Name', 'Characteristics of Roles - Individual Role',
       'Characteristics of Roles - Director Network Size',
       'Characteristics of Roles - Time to Retirement',
       'Characteristics of Roles - Time in Role',
       'Characteristics of Roles - Time on Board',
       'Characteristics of Roles - Time in Company',
       'Director Experience - Total Number of Quoted Boards to Date',
       'Director Experience - Total Number of Private Boards to Date',
       'Director Experience - Total Number of Other Boards to Date',
       'Director Experience - Total Number of Quoted Current Boards',
       'Director Experience - Total Number of Private Current Boards',
       'Director Experience - Total Number of Other Current Boards',
       'Director Experience - Avg. Yrs on Other Quoted Boards',
       'Director Experience - Age (Yrs)',
       'Director Experience - Number of Qualifications',
       'Director Experience - Gender', 'Director Experience - Nationality Mix',
       'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total',
       'Ratios - Performance/ Total', 'Ratios - %Change from Last Period',
       'Ratios - Wealth Delta', 'Annual Direct Compensation - Salary',
       'Annual Direct Compensation - Bonus',
       'Annual Direct Compensation - D.C Pension',
       'Annual Direct Compensation - Other',
       'Annual Direct Compensation - Total Salary+Bonus',
       'Annual Direct Compensation - Total Inc. D.C. Pension & Other',
       'Annual- Equity Linked Options - Shares',
       'Annual- Equity Linked Options - LTIPS(max)',
       'Annual- Equity Linked Options - Vesting Date',
       'Annual- Equity Linked Options - Intrinsic Options (excercisable)',
       'Annual- Equity Linked Options - Intrinsic Options (unexercisable)',
       'Annual- Equity Linked Options - Estimated Options (exercisable)',
       'Annual- Equity Linked Options - Estimated Options (unexcercisable)',
       'Annual- Equity Linked Options - Share Price',
       'Annual- Equity Linked Options - Total Equity Linked Compensation',
       'Total - Total Annual Compensation', 'Accumulated Wealth - Shares',
       'Accumulated Wealth - LTIPS(max)',
       'Accumulated Wealth - Intrinsic Option',
       'Accumulated Wealth - Estimated Option',
       'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth',
       'Committee Members - AUDIT COMMITTEE MEMBER (if yes then put M)',
       'Committee Members - REMUNERATION/ COMPENSATION COMMITTEE MEMBER',
       'Committee Members - NOMINATION COMMITTEE MEMBER',
       'Committee Size - AUDIT COMMITTEE SIZE',
       'Committee Size - REMUNERATION/ COMPENSATION COMMITTEE SIZE',
       'Committee Size - NOMINATION COMMITTEE SIZE'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*', 'Individual Name', 'Characteristics of Roles - Individual Role', 'Characteristics of Roles - Director Network Size', 'Characteristics of Roles - Time to Retirement', 'Characteristics of Roles - Time in Role', 'Characteristics of Roles - Time on Board', 'Characteristics of Roles - Time in Company', 'Director Experience - Total Number of Quoted Boards to Date', 'Director Experience - Total Number of Private Boards to Date', 'Director Experience - Total Number of Other Boards to Date', 'Director Experience - Total Number of Quoted Current Boards', 'Director Experience - Total Number of Private Current Boards', 'Director Experience - Total Number of Other Current Boards', 'Director Experience - Avg. Yrs on Other Quoted Boards', 'Director Experience - Age (Yrs)', 'Director Experience - Number of Qualifications', 'Director Experience - Gender', 'Director Experience - Nationality Mix', 'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total', 'Ratios - Performance/ Total', 'Ratios - %Change from Last Period', 'Ratios - Wealth Delta', 'Annual Direct Compensation - Salary', 'Annual Direct Compensation - Bonus', 'Annual Direct Compensation - D.C Pension', 'Annual Direct Compensation - Other', 'Annual Direct Compensation - Total Salary+Bonus', 'Annual Direct Compensation - Total Inc. D.C. Pension & Other', 'Annual- Equity Linked Options - Shares', 'Annual- Equity Linked Options - LTIPS(max)', 'Annual- Equity Linked Options - Vesting Date', 'Annual- Equity Linked Options - Intrinsic Options (excercisable)', 'Annual- Equity Linked Options - Intrinsic Options (unexercisable)', 'Annual- Equity Linked Options - Estimated Options (exercisable)', 'Annual- Equity Linked Options - Estimated Options (unexcercisable)', 'Annual- Equity Linked Options - Share Price', 'Annual- Equity Linked Options - Total Equity Linked Compensation', 'Total - Total Annual Compensation', 'Accumulated Wealth - Shares', 'Accumulated Wealth - LTIPS(max)', 'Accumulated Wealth - Intrinsic Option', 'Accumulated Wealth - Estimated Option', 'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth']
df.shape: (12270, 55)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (2848, 55)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Org Summary - 2.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Profile - Employment Current Board.xlsx
Unique workbook name: SMDEs Profile - Employment Current Board
List of sheets to open: ['Current Board Role']
------
Sheet 0 : Current Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (48845, 16)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date',
       'Committee Name', 'Committee Role'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date', 'Committee Name', 'Committee Role']
df.shape: (48845, 16)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (3442, 16)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Profile - Employment Current Board.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Org Analysis Averages.xlsx
Unique workbook name: Org Analysis Averages
List of sheets to open: ['Org Analysis Averages']
------
Sheet 0 : Org Analysis Averages
% NaNs in first row: 93.5 > 30%, taking category = row 0 and variable name = row 1
df.shape: (47825, 77)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Organisation Analysis & Averages - Company Name',
       'Organisation Analysis & Averages - CompanyID*',
       'Organisation Analysis & Averages - ISIN',
       'Organisation Analysis & Averages - Ticker',
       'Organisation Analysis & Averages - Index',
       'Organisation Analysis & Averages - Sector',
       'Organisation Analysis & Averages - Country',
       'Organisation Analysis & Averages - Report Year',
       'Organisation Analysis & Averages - Total Number of Board Members',
       'Organisation Analysis & Averages - Total Number of EDs',
       'Organisation Analysis & Averages - Total Number of NEDs',
       'Organisation Analysis & Averages - Independent SD Ratio',
       'Organisation Analysis & Averages - CEO and Chairman Roles are combined on the Board',
       'Organisation Analysis & Averages - Average Salary EDs',
       'Organisation Analysis & Averages - Average Salary NEDs',
       'Organisation Analysis & Averages - Average Bonus EDs',
       'Organisation Analysis & Averages - Average Bonus NEDs',
       'Organisation Analysis & Averages - Average Total Direct Compensation for EDs',
       'Organisation Analysis & Averages - Average Total Direct Compensation for NEDs',
       'Organisation Analysis & Averages - Average Equity-Linked Shares for EDs',
       'Organisation Analysis & Averages - Average Equity-Linked Shares for NEDs',
       'Organisation Analysis & Averages - Average Equity-Linked LTIPs for EDs',
       'Organisation Analysis & Averages - Average Equity-Linked LTIPs for NEDs',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -intrinsic',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -intrinsic',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -estimated',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -estimated',
       'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for EDs',
       'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for NEDs',
       'Organisation Analysis & Averages - Average Wealth Shares EDs',
       'Organisation Analysis & Averages - ED Total Wealth Shares',
       'Organisation Analysis & Averages - Average Wealth Shares NEDs',
       'Organisation Analysis & Averages - NED Total Wealth Shares',
       'Organisation Analysis & Averages - Average Wealth LTIPs EDs',
       'Organisation Analysis & Averages - ED Total Wealth LTIPS',
       'Organisation Analysis & Averages - Average Wealth LTIPs NEDs',
       'Organisation Analysis & Averages - NED Total Wealth LTIPS',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -intrinsic',
       'Organisation Analysis & Averages - ED Total Wealth Shares under Options  -intrinsic',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs -intrinsic',
       'Organisation Analysis & Averages - NED Total Wealth Shares under Options -intrinsic',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -estimated',
       'Organisation Analysis & Averages - ED Total Wealth Shares under Options - estimated',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs - estimated',
       'Organisation Analysis & Averages - NED Total Wealth Shares under Options - estimated',
       'Organisation Analysis & Averages - Liquid Wealth ED Average',
       'Organisation Analysis & Averages - Liquid Wealth ED Total',
       'Organisation Analysis & Averages - Liquid Wealth NED Average',
       'Organisation Analysis & Averages - Liquid Wealth NED Total',
       'Organisation Analysis & Averages - Average time in role for EDs',
       'Organisation Analysis & Averages - Average time in role for NEDs',
       'Average Boards to Date ED's - Quoted',
       'Average Boards to Date ED's - Private',
       'Average Boards to Date ED's - Other',
       'Average Boards to Date NED's - Quoted',
       'Average Boards to Date NED's - Private',
       'Average Boards to Date NED's - Other',
       'Average Boards Currently ED's - Quoted',
       'Average Boards Currently ED's - Private',
       'Average Boards Currently ED's - Other',
       'Average Boards Currently NED's - Quoted',
       'Average Boards Currently NED's - Private',
       'Average Boards Currently NED's - Other',
       'Average Boards Currently NED's - Average years on Other Quoted Boards EDs',
       'Average Boards Currently NED's - Average years on Other Quoted Boards NEDs',
       'Average Boards Currently NED's - Average Age EDs',
       'Average Boards Currently NED's - Average Age NEDs',
       'Average Boards Currently NED's - Average Number of Education EDs',
       'Average Boards Currently NED's - Average Number of Education NED',
       'Average Boards Currently NED's - Gender (% Male) EDs',
       'Average Boards Currently NED's - Gender (% Male) NED',
       'Average Boards Currently NED's - Nationality Mix ED',
       'Average Boards Currently NED's - Nationality Mix NED',
       'Average Boards Currently NED's - Attrition (%) 1 Year ED',
       'Average Boards Currently NED's - Attrition (%) 1 Year NED',
       'Average Boards Currently NED's - Attrition (%) 3 Year ED',
       'Average Boards Currently NED's - Attrition (%) 3 Year NED'],
      dtype='object')
List of cols to keep (after processing): ['Organisation Analysis & Averages - Company Name', 'Organisation Analysis & Averages - CompanyID*', 'Organisation Analysis & Averages - ISIN', 'Organisation Analysis & Averages - Ticker', 'Organisation Analysis & Averages - Index', 'Organisation Analysis & Averages - Sector', 'Organisation Analysis & Averages - Country', 'Organisation Analysis & Averages - Report Year', 'Organisation Analysis & Averages - Total Number of Board Members', 'Organisation Analysis & Averages - Total Number of EDs', 'Organisation Analysis & Averages - Total Number of NEDs', 'Organisation Analysis & Averages - Independent SD Ratio', 'Organisation Analysis & Averages - CEO and Chairman Roles are combined on the Board', 'Organisation Analysis & Averages - Average Salary EDs', 'Organisation Analysis & Averages - Average Salary NEDs', 'Organisation Analysis & Averages - Average Bonus EDs', 'Organisation Analysis & Averages - Average Bonus NEDs', 'Organisation Analysis & Averages - Average Total Direct Compensation for EDs', 'Organisation Analysis & Averages - Average Total Direct Compensation for NEDs', 'Organisation Analysis & Averages - Average Equity-Linked Shares for EDs', 'Organisation Analysis & Averages - Average Equity-Linked Shares for NEDs', 'Organisation Analysis & Averages - Average Equity-Linked LTIPs for EDs', 'Organisation Analysis & Averages - Average Equity-Linked LTIPs for NEDs', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -intrinsic', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -intrinsic', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -estimated', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -estimated', 'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for EDs', 'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for NEDs', 'Organisation Analysis & Averages - Average Wealth Shares EDs', 'Organisation Analysis & Averages - ED Total Wealth Shares', 'Organisation Analysis & Averages - Average Wealth Shares NEDs', 'Organisation Analysis & Averages - NED Total Wealth Shares', 'Organisation Analysis & Averages - Average Wealth LTIPs EDs', 'Organisation Analysis & Averages - ED Total Wealth LTIPS', 'Organisation Analysis & Averages - Average Wealth LTIPs NEDs', 'Organisation Analysis & Averages - NED Total Wealth LTIPS', 'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -intrinsic', 'Organisation Analysis & Averages - ED Total Wealth Shares under Options\xa0 -intrinsic', 'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs -intrinsic', 'Organisation Analysis & Averages - NED Total Wealth Shares under Options -intrinsic', 'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -estimated', 'Organisation Analysis & Averages - ED Total Wealth Shares under Options - estimated', 'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs - estimated', 'Organisation Analysis & Averages - NED Total Wealth Shares under Options - estimated', 'Organisation Analysis & Averages - Liquid Wealth ED Average', 'Organisation Analysis & Averages - Liquid Wealth ED Total', 'Organisation Analysis & Averages - Liquid Wealth NED Average', 'Organisation Analysis & Averages - Liquid Wealth NED Total', 'Organisation Analysis & Averages - Average time in role for EDs', 'Organisation Analysis & Averages - Average time in role for NEDs', "Average Boards Currently NED's - Average Age EDs", "Average Boards Currently NED's - Average Age NEDs", "Average Boards Currently NED's - Average Number of Education EDs", "Average Boards Currently NED's - Average Number of Education NED", "Average Boards Currently NED's - Gender (% Male) EDs", "Average Boards Currently NED's - Gender (% Male) NED", "Average Boards Currently NED's - Nationality Mix ED", "Average Boards Currently NED's - Nationality Mix NED", "Average Boards Currently NED's - Attrition (%) 1 Year ED", "Average Boards Currently NED's - Attrition (%) 1 Year NED", "Average Boards Currently NED's - Attrition (%) 3 Year ED", "Average Boards Currently NED's - Attrition (%) 3 Year NED"]
df.shape: (47825, 63)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (8243, 63)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Org Analysis Averages.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Profile - Employment Historical Board.xlsx
Unique workbook name: SMDEs Profile - Employment Historical Board
List of sheets to open: ['Historic Board Role']
------
Sheet 0 : Historic Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (129367, 17)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date',
       'End Date', 'Committee Name', 'Committee Role'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description']
df.shape: (129367, 12)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (11290, 12)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Profile - Employment Historical Board.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Company Details.xlsx
Unique workbook name: Company Details
List of sheets to open: ['Company Details']
------
Sheet 0 : Company Details
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (5451, 21)
---
Filtering df by columns:
---
df.columns (after processing): Index(['CompanyID*', 'Company Name', 'HOAddress1', 'HOAddress2', 'HOAddress3',
       'HOAddress4', 'HOAddress5', 'HOCountryName', 'HO TelNumber',
       'HO FaxNumber', 'HO URL', 'CIK Code', 'ISIN', 'Ticker', 'Index',
       'Sector', 'Market Cap', 'Revenue at Year End', 'Latest AR', 'Auditors',
       'Bankers'],
      dtype='object')
List of cols to keep (after processing): ['CompanyID*', 'Company Name', 'HOAddress1', 'HOAddress2', 'HOAddress3', 'HOAddress4', 'HOAddress5', 'HOCountryName', 'HO TelNumber', 'HO FaxNumber', 'HO URL', 'CIK Code', 'ISIN', 'Ticker', 'Index', 'Sector', 'Market Cap', 'Latest AR', 'Auditors', 'Bankers']
df.shape: (5451, 20)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (520, 20)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Company Details.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Director Profile - Other Activities.xlsx
Unique workbook name: Director Profile - Other Activities
List of sheets to open: ['Current Other Activities Tab']
------
Sheet 0 : Current Other Activities Tab
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (45834, 8)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Role', 'Role Description', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*']
df.shape: (45834, 4)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (5, 4)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Director Profile - Other Activities.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Profile - Characteristics - 2.xlsx
Unique workbook name: SMDEs Profile - Characteristics
List of sheets to open: ['Charcteristics']
------
Sheet 0 : Charcteristics
% NaNs in first row: 73.3 > 30%, taking category = row 0 and variable name = row 1
df.shape: (1295, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender',
       'Nationality', 'Annual Report Year', 'Boards to Date - Quoted',
       'Boards to Date - Private', 'Boards to Date - Other',
       'Current Boards - Quoted', 'Current Boards - Private',
       'Current Boards - Other', 'Avg Years on Quoted Boards'],
      dtype='object')
List of cols to keep (after processing): ['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender', 'Nationality', 'Annual Report Year', 'Boards to Date - Quoted', 'Boards to Date - Private', 'Boards to Date - Other', 'Current Boards - Quoted', 'Current Boards - Private', 'Current Boards - Other', 'Avg Years on Quoted Boards']
df.shape: (1295, 15)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1295, 15)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Profile - Characteristics - 2.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Director Profile - Education & Achievements.xlsx
Unique workbook name: Director Profile - Education & Achievements
List of sheets to open: ['Education', 'Achievements']
------
Sheet 0 : Education
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (108654, 9)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'InstitutionID*',
       'Institution Name', 'Company Type', 'Qualification',
       'Qualification Description', 'Qualification Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'InstitutionID*', 'Institution Name', 'Company Type', 'Qualification', 'Qualification Description', 'Qualification Date']
df.shape: (108654, 9)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (108654, 9)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Director Profile - Education & Achievements_Education.xlsx
Done!
------
Sheet 1 : Achievements
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (35760, 7)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'OrganisationID*',
       'OrganisationName', 'Achievement Date', 'Award/Achievement'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'OrganisationID*', 'OrganisationName', 'Achievement Date', 'Award/Achievement']
df.shape: (35760, 7)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (35760, 7)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Director Profile - Education & Achievements_Achievements.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Director Profile - Characteristics.xlsx
Unique workbook name: Director Profile - Characteristics
List of sheets to open: ['Charcteristics']
------
Sheet 0 : Charcteristics
% NaNs in first row: 73.3 > 30%, taking category = row 0 and variable name = row 1
df.shape: (378927, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender',
       'Nationality', 'Annual Report Year', 'Boards to Date - Quoted',
       'Boards to Date - Private', 'Boards to Date - Other',
       'Current Boards - Quoted', 'Current Boards - Private',
       'Current Boards - Other', 'Avg Years on Quoted Boards'],
      dtype='object')
List of cols to keep (after processing): ['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender', 'Nationality', 'Annual Report Year', 'Boards to Date - Quoted', 'Boards to Date - Private', 'Boards to Date - Other', 'Current Boards - Quoted', 'Current Boards - Private', 'Current Boards - Other', 'Avg Years on Quoted Boards']
df.shape: (378927, 15)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (378927, 15)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Director Profile - Characteristics.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Director Profile - Employment Historical NonBoard.xlsx
Unique workbook name: Director Profile - Employment Historical NonBoard
List of sheets to open: ['Historic Non Board Role']
------
Sheet 0 : Historic Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (333911, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date',
       'End Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index']
df.shape: (333911, 8)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (32908, 8)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Director Profile - Employment Historical NonBoard.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Committee Details.xlsx
Unique workbook name: SMDEs Committee Details
List of sheets to open: [1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 'Current']
------
Sheet 0 : 1999
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (2, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (2, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (2, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 1 : 2000
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (11, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (11, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (11, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 2 : 2001
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (15, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (15, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (15, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 3 : 2002
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (20, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (20, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (20, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 4 : 2003
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (29, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (29, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (29, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 5 : 2004
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (33, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (33, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (33, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 6 : 2005
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (58, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (58, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (58, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 7 : 2006
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (55, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (55, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (55, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 8 : 2007
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (56, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (56, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (56, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 9 : 2008
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (43, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (43, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (43, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 10 : 2009
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (59, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (59, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (59, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 11 : 2010
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (18, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (18, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (18, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 12 : 2011
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (17, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (17, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (17, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 13 : 2012
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (20, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (20, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (20, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 14 : 2013
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (20, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (20, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (20, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 15 : 2014
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (10, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (10, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (10, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 16 : 2015
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (21, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (21, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (21, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 17 : 2016
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (17, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (17, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (17, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 18 : 2017
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (8, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (8, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (8, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 19 : 2018
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (6, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (6, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (6, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 20 : 2019
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (7, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (7, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (7, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 21 : 2020
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (2, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (2, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (2, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 22 : 2021
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (0, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (0, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (0, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 23 : Current
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (7, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name', 'Director Type']
df.shape: (7, 11)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (6, 11)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Committee Details_Current.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Profile - Employment Current NonBoard.xlsx
Unique workbook name: SMDEs Profile - Employment Current NonBoard
List of sheets to open: ['Current Non Board Role']
------
Sheet 0 : Current Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (93013, 14)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date']
df.shape: (93013, 14)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (10566, 14)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Profile - Employment Current NonBoard.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Director Profile - Employment Current NonBoard.xlsx
Unique workbook name: Director Profile - Employment Current NonBoard
List of sheets to open: ['Current Non Board Role']
------
Sheet 0 : Current Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (52923, 14)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date']
df.shape: (52923, 14)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (2132, 14)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Director Profile - Employment Current NonBoard.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Board Summary.xlsx
Unique workbook name: Board Summary
List of sheets to open: ['Board Summary']
------
Sheet 0 : Board Summary
% NaNs in first row: 82.2 > 30%, taking category = row 0 and variable name = row 1
df.shape: (457300, 73)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN',
       'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*',
       'Individual Name', 'Characteristics of Roles - Individual Role',
       'Characteristics of Roles - Director Network Size',
       'Characteristics of Roles - Time to Retirement',
       'Characteristics of Roles - Time in Role',
       'Characteristics of Roles - Time on Board',
       'Characteristics of Roles - Time in Company',
       'Director Experience - Total Number of Quoted Boards to Date',
       'Director Experience - Total Number of Private Boards to Date',
       'Director Experience - Total Number of Other Boards to Date',
       'Director Experience - Total Number of Quoted Current Boards',
       'Director Experience - Total Number of Private Current Boards',
       'Director Experience - Total Number of Other Current Boards',
       'Director Experience - Avg. Yrs on Other Quoted Boards',
       'Director Experience - Age (Yrs)',
       'Director Experience - Number of Qualifications',
       'Director Experience - Gender', 'Director Experience - Nationality Mix',
       'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total',
       'Ratios - Performance/ Total', 'Ratios - %Change from Last Period',
       'Ratios - Wealth Delta',
       'Director Count Totals - Total Directors on the Board',
       'Director Count Totals - Number of SDs on Board',
       'Director Count Totals - Number of Independent NED on Board',
       'Director Count Totals - Executive Chairman present on Board or Combined role of CEO & Chairman is present (1- Yes, 0 - No)',
       'Director Count Totals - Number of Independent NED with past CFO/FD role',
       'Annual Direct Compensation - Salary',
       'Annual Direct Compensation - Bonus',
       'Annual Direct Compensation - D.C Pension',
       'Annual Direct Compensation - Other',
       'Annual Direct Compensation - Total Salary+Bonus',
       'Annual Direct Compensation - Total Inc. D.C. Pension & Other',
       'Annual- Equity Linked Options - Shares',
       'Annual- Equity Linked Options - LTIPS(max)',
       'Annual- Equity Linked Options - Vesting Date',
       'Annual- Equity Linked Options - Intrinsic Options (excercisable)',
       'Annual- Equity Linked Options - Intrinsic Options (unexercisable)',
       'Annual- Equity Linked Options - Estimated Options (exercisable)',
       'Annual- Equity Linked Options - Estimated Options (unexcercisable)',
       'Annual- Equity Linked Options - Share Price',
       'Annual- Equity Linked Options - Total Equity Linked Compensation',
       'Total - Total Annual Compensation', 'Accumulated Wealth - Shares',
       'Accumulated Wealth - LTIPS(max)',
       'Accumulated Wealth - Intrinsic Option',
       'Accumulated Wealth - Estimated Option',
       'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth',
       'Committee Members - AUDIT COMMITTEE MEMBER (if yes then put M)',
       'Committee Members - REMUNERATION/ COMPENSATION COMMITTEE MEMBER',
       'Committee Members - NOMINATION COMMITTEE MEMBER',
       'Committee Size - AUDIT COMMITTEE SIZE',
       'Committee Size - REMUNERATION/ COMPENSATION COMMITTEE SIZE',
       'Committee Size - NOMINATION COMMITTEE SIZE',
       'Number of Independent NEDs in Committee - Number of Independent NED on Audit Committee',
       'Number of Independent NEDs in Committee - Number of Independent NED on Remuneration/ Compensation Committee',
       'Number of Independent NEDs in Committee - Number of Independent NED on Nomination Committee',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Audit (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Remuneration/ Compensation (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Nomination (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED with functional expertise on Audit Committee'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*', 'Individual Name', 'Characteristics of Roles - Individual Role', 'Characteristics of Roles - Director Network Size', 'Characteristics of Roles - Time to Retirement', 'Characteristics of Roles - Time in Role', 'Characteristics of Roles - Time on Board', 'Characteristics of Roles - Time in Company', 'Director Experience - Total Number of Quoted Boards to Date', 'Director Experience - Total Number of Private Boards to Date', 'Director Experience - Total Number of Other Boards to Date', 'Director Experience - Total Number of Quoted Current Boards', 'Director Experience - Total Number of Private Current Boards', 'Director Experience - Total Number of Other Current Boards', 'Director Experience - Avg. Yrs on Other Quoted Boards', 'Director Experience - Age (Yrs)', 'Director Experience - Number of Qualifications', 'Director Experience - Gender', 'Director Experience - Nationality Mix', 'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total', 'Ratios - Performance/ Total', 'Ratios - %Change from Last Period', 'Ratios - Wealth Delta', 'Director Count Totals - Number of Independent NED with past CFO/FD role', 'Annual Direct Compensation - Salary', 'Annual Direct Compensation - Bonus', 'Annual Direct Compensation - D.C Pension', 'Annual Direct Compensation - Other', 'Annual Direct Compensation - Total Salary+Bonus', 'Annual Direct Compensation - Total Inc. D.C. Pension & Other', 'Annual- Equity Linked Options - Shares', 'Annual- Equity Linked Options - LTIPS(max)', 'Annual- Equity Linked Options - Vesting Date', 'Annual- Equity Linked Options - Intrinsic Options (excercisable)', 'Annual- Equity Linked Options - Intrinsic Options (unexercisable)', 'Annual- Equity Linked Options - Estimated Options (exercisable)', 'Annual- Equity Linked Options - Estimated Options (unexcercisable)', 'Annual- Equity Linked Options - Share Price', 'Annual- Equity Linked Options - Total Equity Linked Compensation', 'Total - Total Annual Compensation', 'Accumulated Wealth - Shares', 'Accumulated Wealth - LTIPS(max)', 'Accumulated Wealth - Intrinsic Option', 'Accumulated Wealth - Estimated Option', 'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth']
df.shape: (457300, 56)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (105917, 56)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Board Summary.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Company Announcements.xlsx
Unique workbook name: SMDEs Company Announcements
List of sheets to open: ['Announcements']
------
Sheet 0 : Announcements
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (18390, 10)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Announcement Date', 'Effective Date', 'CompanyID*', 'Company Name',
       'ISIN', 'DirectorID*', 'Director Name', 'Gender', 'Role',
       'Description'],
      dtype='object')
List of cols to keep (after processing): ['CompanyID*', 'Company Name', 'ISIN', 'DirectorID*', 'Director Name']
df.shape: (18390, 5)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (7086, 5)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Company Announcements.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Director Details Mapping File.xlsx
Unique workbook name: Director Details Mapping File
List of sheets to open: ['Sheet1']
------
Sheet 0 : Sheet1
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (71920, 3)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Bex Dir ID', 'DirectorID*', 'Director Name'], dtype='object')
List of cols to keep (after processing): ['Bex Dir ID', 'DirectorID*', 'Director Name']
df.shape: (71920, 3)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (71920, 3)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Director Details Mapping File.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Director Profile - Employment Historical Board.xlsx
Unique workbook name: Director Profile - Employment Historical Board
List of sheets to open: ['Historic Board Role']
------
Sheet 0 : Historic Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (483447, 17)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date',
       'End Date', 'Committee Name', 'Committee Role'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description']
df.shape: (483447, 12)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (58218, 12)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Director Profile - Employment Historical Board.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Profile - Education & Achievements.xlsx
Unique workbook name: SMDEs Profile - Education & Achievements
List of sheets to open: ['Education', 'Achievements']
------
Sheet 0 : Education
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (135209, 9)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'InstitutionID*',
       'Institution Name', 'Company Type', 'Qualification',
       'Qualification Description', 'Qualification Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'InstitutionID*', 'Institution Name', 'Company Type', 'Qualification', 'Qualification Description', 'Qualification Date']
df.shape: (135209, 9)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (135209, 9)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Profile - Education & Achievements_Education.xlsx
Done!
------
Sheet 1 : Achievements
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (17339, 7)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'OrganisationID*',
       'OrganisationName', 'Achievement Date', 'Award/Achievement'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'OrganisationID*', 'OrganisationName', 'Achievement Date', 'Award/Achievement']
df.shape: (17339, 7)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (17339, 7)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Profile - Education & Achievements_Achievements.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Profile - Other Activities.xlsx
Unique workbook name: SMDEs Profile - Other Activities
List of sheets to open: ['Current Other Activities Tab']
------
Sheet 0 : Current Other Activities Tab
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (33323, 8)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Role', 'Role Description', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*']
df.shape: (33323, 4)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (0, 4)
Note: df has no rows and/or columns!
Done!
-----------------------------------------------------------
File name (kept): Europe - Director Profile - Employment Current Board.xlsx
Unique workbook name: Director Profile - Employment Current Board
List of sheets to open: ['Current Board Role']
------
Sheet 0 : Current Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (141914, 16)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date',
       'Committee Name', 'Committee Role'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date', 'Committee Name', 'Committee Role']
df.shape: (141914, 16)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (11678, 16)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Director Profile - Employment Current Board.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - SMDEs Profile - Employment Historical NonBoard - 1.xlsx
Unique workbook name: SMDEs Profile - Employment Historical NonBoard
List of sheets to open: ['Historic Non Board Role']
------
Sheet 0 : Historic Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499976, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date',
       'End Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index']
df.shape: (499976, 8)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (67868, 8)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - SMDEs Profile - Employment Historical NonBoard - 1.xlsx
Done!
-----------------------------------------------------------
File name (kept): Europe - Committee Details.xlsx
Unique workbook name: Committee Details
List of sheets to open: [1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 'Current']
------
Sheet 0 : 1999
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (1777, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (1777, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1777, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 1 : 2000
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (2643, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (2643, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (2643, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 2 : 2001
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (4050, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (4050, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (4050, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 3 : 2002
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (5261, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (5261, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (5261, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 4 : 2003
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (6761, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (6761, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (6761, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 5 : 2004
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (7564, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (7564, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (7564, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 6 : 2005
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (9401, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (9401, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (9401, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 7 : 2006
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (10281, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (10281, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (10281, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 8 : 2007
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (12392, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (12392, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (12392, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 9 : 2008
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (13707, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (13707, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (13707, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 10 : 2009
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (14050, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (14050, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (14050, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 11 : 2010
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (15191, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (15191, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (15191, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 12 : 2011
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (16572, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (16572, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (16572, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 13 : 2012
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (17599, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (17599, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (17599, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 14 : 2013
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (18602, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (18602, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (18602, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 15 : 2014
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (20048, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (20048, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (20048, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 16 : 2015
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (22280, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (22280, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (22280, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 17 : 2016
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (23007, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (23007, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (23007, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 18 : 2017
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (24474, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (24474, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (24474, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 19 : 2018
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (26096, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (26096, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (26096, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 20 : 2019
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (26500, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (26500, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (26500, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 21 : 2020
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (9552, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (9552, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (9552, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 22 : 2021
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (34, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (34, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (34, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 23 : Current
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (25479, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name', 'Director Type']
df.shape: (25479, 11)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (6479, 11)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/Europe - Committee Details_Current.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Director Profile - Employment Historical Board - 1.xlsx
Unique workbook name: Director Profile - Employment Historical Board
List of sheets to open: ['Historic Board Role']
------
Sheet 0 : Historic Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499999, 17)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED', 'Start Date',
       'End Date', 'Committee Name', 'Committee Role'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description']
df.shape: (499999, 12)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (71429, 12)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Director Profile - Employment Historical Board - 1.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Employment Historical NonBoard - 4.xlsx
Unique workbook name: SMDEs Profile - Employment Historical NonBoard
List of sheets to open: ['Historic Non Board Role']
------
Sheet 0 : Historic Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499997, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date',
       'End Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index']
df.shape: (499997, 8)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (80922, 8)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Employment Historical NonBoard - 4.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Employment Historical NonBoard - 5.xlsx
Unique workbook name: SMDEs Profile - Employment Historical NonBoard
List of sheets to open: ['Historic Non Board Role']
------
Sheet 0 : Historic Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (309797, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date',
       'End Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index']
df.shape: (309797, 8)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (52463, 8)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Employment Historical NonBoard - 5.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Org Analysis Averages.xlsx
Unique workbook name: Org Analysis Averages
List of sheets to open: ['Org Analysis Averages']
------
Sheet 0 : Org Analysis Averages
% NaNs in first row: 93.5 > 30%, taking category = row 0 and variable name = row 1
df.shape: (142061, 77)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Organisation Analysis & Averages - Company Name',
       'Organisation Analysis & Averages - CompanyID*',
       'Organisation Analysis & Averages - ISIN',
       'Organisation Analysis & Averages - Ticker',
       'Organisation Analysis & Averages - Index',
       'Organisation Analysis & Averages - Sector',
       'Organisation Analysis & Averages - Country',
       'Organisation Analysis & Averages - Report Year',
       'Organisation Analysis & Averages - Total Number of Board Members',
       'Organisation Analysis & Averages - Total Number of EDs',
       'Organisation Analysis & Averages - Total Number of NEDs',
       'Organisation Analysis & Averages - Independent SD Ratio',
       'Organisation Analysis & Averages - CEO and Chairman Roles are combined on the Board',
       'Organisation Analysis & Averages - Average Salary EDs',
       'Organisation Analysis & Averages - Average Salary NEDs',
       'Organisation Analysis & Averages - Average Bonus EDs',
       'Organisation Analysis & Averages - Average Bonus NEDs',
       'Organisation Analysis & Averages - Average Total Direct Compensation for EDs',
       'Organisation Analysis & Averages - Average Total Direct Compensation for NEDs',
       'Organisation Analysis & Averages - Average Equity-Linked Shares for EDs',
       'Organisation Analysis & Averages - Average Equity-Linked Shares for NEDs',
       'Organisation Analysis & Averages - Average Equity-Linked LTIPs for EDs',
       'Organisation Analysis & Averages - Average Equity-Linked LTIPs for NEDs',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -intrinsic',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -intrinsic',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -estimated',
       'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -estimated',
       'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for EDs',
       'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for NEDs',
       'Organisation Analysis & Averages - Average Wealth Shares EDs',
       'Organisation Analysis & Averages - ED Total Wealth Shares',
       'Organisation Analysis & Averages - Average Wealth Shares NEDs',
       'Organisation Analysis & Averages - NED Total Wealth Shares',
       'Organisation Analysis & Averages - Average Wealth LTIPs EDs',
       'Organisation Analysis & Averages - ED Total Wealth LTIPS',
       'Organisation Analysis & Averages - Average Wealth LTIPs NEDs',
       'Organisation Analysis & Averages - NED Total Wealth LTIPS',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -intrinsic',
       'Organisation Analysis & Averages - ED Total Wealth Shares under Options  -intrinsic',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs -intrinsic',
       'Organisation Analysis & Averages - NED Total Wealth Shares under Options -intrinsic',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -estimated',
       'Organisation Analysis & Averages - ED Total Wealth Shares under Options - estimated',
       'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs - estimated',
       'Organisation Analysis & Averages - NED Total Wealth Shares under Options - estimated',
       'Organisation Analysis & Averages - Liquid Wealth ED Average',
       'Organisation Analysis & Averages - Liquid Wealth ED Total',
       'Organisation Analysis & Averages - Liquid Wealth NED Average',
       'Organisation Analysis & Averages - Liquid Wealth NED Total',
       'Organisation Analysis & Averages - Average time in role for EDs',
       'Organisation Analysis & Averages - Average time in role for NEDs',
       'Average Boards to Date ED's - Quoted',
       'Average Boards to Date ED's - Private',
       'Average Boards to Date ED's - Other',
       'Average Boards to Date NED's - Quoted',
       'Average Boards to Date NED's - Private',
       'Average Boards to Date NED's - Other',
       'Average Boards Currently ED's - Quoted',
       'Average Boards Currently ED's - Private',
       'Average Boards Currently ED's - Other',
       'Average Boards Currently NED's - Quoted',
       'Average Boards Currently NED's - Private',
       'Average Boards Currently NED's - Other',
       'Average Boards Currently NED's - Average years on Other Quoted Boards EDs',
       'Average Boards Currently NED's - Average years on Other Quoted Boards NEDs',
       'Average Boards Currently NED's - Average Age EDs',
       'Average Boards Currently NED's - Average Age NEDs',
       'Average Boards Currently NED's - Average Number of Education EDs',
       'Average Boards Currently NED's - Average Number of Education NED',
       'Average Boards Currently NED's - Gender (% Male) EDs',
       'Average Boards Currently NED's - Gender (% Male) NED',
       'Average Boards Currently NED's - Nationality Mix ED',
       'Average Boards Currently NED's - Nationality Mix NED',
       'Average Boards Currently NED's - Attrition (%) 1 Year ED',
       'Average Boards Currently NED's - Attrition (%) 1 Year NED',
       'Average Boards Currently NED's - Attrition (%) 3 Year ED',
       'Average Boards Currently NED's - Attrition (%) 3 Year NED'],
      dtype='object')
List of cols to keep (after processing): ['Organisation Analysis & Averages - Company Name', 'Organisation Analysis & Averages - CompanyID*', 'Organisation Analysis & Averages - ISIN', 'Organisation Analysis & Averages - Ticker', 'Organisation Analysis & Averages - Index', 'Organisation Analysis & Averages - Sector', 'Organisation Analysis & Averages - Country', 'Organisation Analysis & Averages - Report Year', 'Organisation Analysis & Averages - Total Number of Board Members', 'Organisation Analysis & Averages - Total Number of EDs', 'Organisation Analysis & Averages - Total Number of NEDs', 'Organisation Analysis & Averages - Independent SD Ratio', 'Organisation Analysis & Averages - CEO and Chairman Roles are combined on the Board', 'Organisation Analysis & Averages - Average Salary EDs', 'Organisation Analysis & Averages - Average Salary NEDs', 'Organisation Analysis & Averages - Average Bonus EDs', 'Organisation Analysis & Averages - Average Bonus NEDs', 'Organisation Analysis & Averages - Average Total Direct Compensation for EDs', 'Organisation Analysis & Averages - Average Total Direct Compensation for NEDs', 'Organisation Analysis & Averages - Average Equity-Linked Shares for EDs', 'Organisation Analysis & Averages - Average Equity-Linked Shares for NEDs', 'Organisation Analysis & Averages - Average Equity-Linked LTIPs for EDs', 'Organisation Analysis & Averages - Average Equity-Linked LTIPs for NEDs', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -intrinsic', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -intrinsic', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for EDs -estimated', 'Organisation Analysis & Averages - Average Equity-Linked Shares under Options for NEDs -estimated', 'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for EDs', 'Organisation Analysis & Averages - Average Total Equity-Linked Compensation for NEDs', 'Organisation Analysis & Averages - Average Wealth Shares EDs', 'Organisation Analysis & Averages - ED Total Wealth Shares', 'Organisation Analysis & Averages - Average Wealth Shares NEDs', 'Organisation Analysis & Averages - NED Total Wealth Shares', 'Organisation Analysis & Averages - Average Wealth LTIPs EDs', 'Organisation Analysis & Averages - ED Total Wealth LTIPS', 'Organisation Analysis & Averages - Average Wealth LTIPs NEDs', 'Organisation Analysis & Averages - NED Total Wealth LTIPS', 'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -intrinsic', 'Organisation Analysis & Averages - ED Total Wealth Shares under Options\xa0 -intrinsic', 'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs -intrinsic', 'Organisation Analysis & Averages - NED Total Wealth Shares under Options -intrinsic', 'Organisation Analysis & Averages - Average Wealth Shares under Options for EDs -estimated', 'Organisation Analysis & Averages - ED Total Wealth Shares under Options - estimated', 'Organisation Analysis & Averages - Average Wealth Shares under Options for NEDs - estimated', 'Organisation Analysis & Averages - NED Total Wealth Shares under Options - estimated', 'Organisation Analysis & Averages - Liquid Wealth ED Average', 'Organisation Analysis & Averages - Liquid Wealth ED Total', 'Organisation Analysis & Averages - Liquid Wealth NED Average', 'Organisation Analysis & Averages - Liquid Wealth NED Total', 'Organisation Analysis & Averages - Average time in role for EDs', 'Organisation Analysis & Averages - Average time in role for NEDs', "Average Boards Currently NED's - Average Age EDs", "Average Boards Currently NED's - Average Age NEDs", "Average Boards Currently NED's - Average Number of Education EDs", "Average Boards Currently NED's - Average Number of Education NED", "Average Boards Currently NED's - Gender (% Male) EDs", "Average Boards Currently NED's - Gender (% Male) NED", "Average Boards Currently NED's - Nationality Mix ED", "Average Boards Currently NED's - Nationality Mix NED", "Average Boards Currently NED's - Attrition (%) 1 Year ED", "Average Boards Currently NED's - Attrition (%) 1 Year NED", "Average Boards Currently NED's - Attrition (%) 3 Year ED", "Average Boards Currently NED's - Attrition (%) 3 Year NED"]
df.shape: (142061, 63)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (29607, 63)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Org Analysis Averages.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Mapping File.xlsx
Unique workbook name: SMDEs Mapping File
List of sheets to open: ['Sheet1']
------
Sheet 0 : Sheet1
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (406201, 3)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Bex Dir ID', 'DirectorID*', 'Director Name'], dtype='object')
List of cols to keep (after processing): ['Bex Dir ID', 'DirectorID*', 'Director Name']
df.shape: (406201, 3)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (406201, 3)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Mapping File.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Characteristics - 2.xlsx
Unique workbook name: SMDEs Profile - Characteristics
List of sheets to open: ['Charcteristics']
------
Sheet 0 : Charcteristics
% NaNs in first row: 73.3 > 30%, taking category = row 0 and variable name = row 1
df.shape: (499999, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender',
       'Nationality', 'Annual Report Year', 'Boards to Date - Quoted',
       'Boards to Date - Private', 'Boards to Date - Other',
       'Current Boards - Quoted', 'Current Boards - Private',
       'Current Boards - Other', 'Avg Years on Quoted Boards'],
      dtype='object')
List of cols to keep (after processing): ['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender', 'Nationality', 'Annual Report Year', 'Boards to Date - Quoted', 'Boards to Date - Private', 'Boards to Date - Other', 'Current Boards - Quoted', 'Current Boards - Private', 'Current Boards - Other', 'Avg Years on Quoted Boards']
df.shape: (499999, 15)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (499999, 15)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Characteristics - 2.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Company Details.xlsx
Unique workbook name: Company Details
List of sheets to open: ['Company Details']
------
Sheet 0 : Company Details
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (17697, 21)
---
Filtering df by columns:
---
df.columns (after processing): Index(['CompanyID*', 'Company Name', 'HOAddress1', 'HOAddress2', 'HOAddress3',
       'HOAddress4', 'HOAddress5', 'HOCountryName', 'HO TelNumber',
       'HO FaxNumber', 'HO URL', 'CIK Code', 'ISIN', 'Ticker', 'Index',
       'Sector', 'Market Cap', 'Revenue at Year End', 'Latest AR', 'Auditors',
       'Bankers'],
      dtype='object')
List of cols to keep (after processing): ['CompanyID*', 'Company Name', 'HOAddress1', 'HOAddress2', 'HOAddress3', 'HOAddress4', 'HOAddress5', 'HOCountryName', 'HO TelNumber', 'HO FaxNumber', 'HO URL', 'CIK Code', 'ISIN', 'Ticker', 'Index', 'Sector', 'Market Cap', 'Latest AR', 'Auditors', 'Bankers']
df.shape: (17697, 20)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (1961, 20)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Company Details.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Characteristics - 4.xlsx
Unique workbook name: SMDEs Profile - Characteristics
List of sheets to open: ['Charcteristics']
------
Sheet 0 : Charcteristics
% NaNs in first row: 73.3 > 30%, taking category = row 0 and variable name = row 1
df.shape: (499998, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender',
       'Nationality', 'Annual Report Year', 'Boards to Date - Quoted',
       'Boards to Date - Private', 'Boards to Date - Other',
       'Current Boards - Quoted', 'Current Boards - Private',
       'Current Boards - Other', 'Avg Years on Quoted Boards'],
      dtype='object')
List of cols to keep (after processing): ['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender', 'Nationality', 'Annual Report Year', 'Boards to Date - Quoted', 'Boards to Date - Private', 'Boards to Date - Other', 'Current Boards - Quoted', 'Current Boards - Private', 'Current Boards - Other', 'Avg Years on Quoted Boards']
df.shape: (499998, 15)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (499998, 15)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Characteristics - 4.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Characteristics - 1.xlsx
Unique workbook name: SMDEs Profile - Characteristics
List of sheets to open: ['Charcteristics']
------
Sheet 0 : Charcteristics
% NaNs in first row: 73.3 > 30%, taking category = row 0 and variable name = row 1
df.shape: (500000, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender',
       'Nationality', 'Annual Report Year', 'Boards to Date - Quoted',
       'Boards to Date - Private', 'Boards to Date - Other',
       'Current Boards - Quoted', 'Current Boards - Private',
       'Current Boards - Other', 'Avg Years on Quoted Boards'],
      dtype='object')
List of cols to keep (after processing): ['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender', 'Nationality', 'Annual Report Year', 'Boards to Date - Quoted', 'Boards to Date - Private', 'Boards to Date - Other', 'Current Boards - Quoted', 'Current Boards - Private', 'Current Boards - Other', 'Avg Years on Quoted Boards']
df.shape: (500000, 15)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (500000, 15)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Characteristics - 1.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Employment Historical NonBoard - 2.xlsx
Unique workbook name: SMDEs Profile - Employment Historical NonBoard
List of sheets to open: ['Historic Non Board Role']
------
Sheet 0 : Historic Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499999, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date',
       'End Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index']
df.shape: (499999, 8)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (47530, 8)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Employment Historical NonBoard - 2.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Committee Details.xlsx
Unique workbook name: Committee Details
List of sheets to open: [1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 'Current']
------
Sheet 0 : 1999
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (1886, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (1886, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1886, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 1 : 2000
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (20469, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (20469, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (20469, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 2 : 2001
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (25047, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (25047, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (25047, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 3 : 2002
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (27030, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (27030, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (27030, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 4 : 2003
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (46505, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (46505, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (46505, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 5 : 2004
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (57957, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (57957, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (57957, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 6 : 2005
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (64907, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (64907, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (64907, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 7 : 2006
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (67064, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (67064, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (67064, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 8 : 2007
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (68972, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (68972, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (68972, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 9 : 2008
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (66295, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (66295, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (66295, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 10 : 2009
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (64846, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (64846, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (64846, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 11 : 2010
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (65139, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (65139, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (65139, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 12 : 2011
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (66748, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (66748, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (66748, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 13 : 2012
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (66940, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (66940, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (66940, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 14 : 2013
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (69411, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (69411, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (69411, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 15 : 2014
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (71019, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (71019, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (71019, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 16 : 2015
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (73985, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (73985, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (73985, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 17 : 2016
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (72905, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (72905, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (72905, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 18 : 2017
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (71724, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (71724, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (71724, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 19 : 2018
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (71499, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (71499, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (71499, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 20 : 2019
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (71346, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (71346, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (71346, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 21 : 2020
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (26809, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (26809, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (26809, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 22 : 2021
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (434, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (434, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (434, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 23 : Current
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (76577, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name', 'Director Type']
df.shape: (76577, 11)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (22349, 11)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Committee Details_Current.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Director Profile - Education & Achievements.xlsx
Unique workbook name: Director Profile - Education & Achievements
List of sheets to open: ['Education', 'Achievements']
------
Sheet 0 : Education
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (263212, 9)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'InstitutionID*',
       'Institution Name', 'Company Type', 'Qualification',
       'Qualification Description', 'Qualification Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'InstitutionID*', 'Institution Name', 'Company Type', 'Qualification', 'Qualification Description', 'Qualification Date']
df.shape: (263212, 9)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (263212, 9)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Director Profile - Education & Achievements_Education.xlsx
Done!
------
Sheet 1 : Achievements
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (193405, 7)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'OrganisationID*',
       'OrganisationName', 'Achievement Date', 'Award/Achievement'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'OrganisationID*', 'OrganisationName', 'Achievement Date', 'Award/Achievement']
df.shape: (193405, 7)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (193405, 7)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Director Profile - Education & Achievements_Achievements.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Committee Details.xlsx
Unique workbook name: SMDEs Committee Details
List of sheets to open: [1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 'Current']
------
Sheet 0 : 1999
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (149, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (149, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (149, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 1 : 2000
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (1711, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (1711, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1711, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 2 : 2001
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (1969, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (1969, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1969, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 3 : 2002
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (1738, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (1738, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1738, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 4 : 2003
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (1566, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (1566, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1566, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 5 : 2004
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (1463, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (1463, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1463, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 6 : 2005
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (1344, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (1344, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1344, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 7 : 2006
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (1230, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (1230, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1230, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 8 : 2007
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (1107, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (1107, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (1107, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 9 : 2008
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (950, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (950, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (950, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 10 : 2009
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (917, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (917, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (917, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 11 : 2010
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (451, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (451, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (451, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 12 : 2011
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (356, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (356, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (356, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 13 : 2012
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (341, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (341, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (341, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 14 : 2013
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (352, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (352, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (352, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 15 : 2014
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (334, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (334, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (334, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 16 : 2015
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (341, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (341, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (341, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 17 : 2016
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (358, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (358, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (358, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 18 : 2017
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (322, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (322, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (322, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 19 : 2018
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (319, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (319, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (319, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 20 : 2019
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (279, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (279, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (279, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 21 : 2020
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (96, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (96, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (96, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 22 : 2021
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (3, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): []
df.shape: (3, 0)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (3, 0)
Note: df has no rows and/or columns!
Done!
------
Sheet 23 : Current
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (268, 19)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker',
       'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name',
       'Director Type', 'Committee Name', 'Committee Role',
       'Functional Experience', 'Board Role', 'Board Position(Yes/No)',
       'Other Like Committees', 'Other Board Name', 'Director Role Status'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Country', 'DirectorID*', 'Director Name', 'Director Type']
df.shape: (268, 11)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (184, 11)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Committee Details_Current.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Org Summary - 1.xlsx
Unique workbook name: SMDEs Org Summary
List of sheets to open: ['Board Summary']
------
Sheet 0 : Board Summary
% NaNs in first row: 83.6 > 30%, taking category = row 0 and variable name = row 1
df.shape: (499872, 61)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN',
       'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*',
       'Individual Name', 'Characteristics of Roles - Individual Role',
       'Characteristics of Roles - Director Network Size',
       'Characteristics of Roles - Time to Retirement',
       'Characteristics of Roles - Time in Role',
       'Characteristics of Roles - Time on Board',
       'Characteristics of Roles - Time in Company',
       'Director Experience - Total Number of Quoted Boards to Date',
       'Director Experience - Total Number of Private Boards to Date',
       'Director Experience - Total Number of Other Boards to Date',
       'Director Experience - Total Number of Quoted Current Boards',
       'Director Experience - Total Number of Private Current Boards',
       'Director Experience - Total Number of Other Current Boards',
       'Director Experience - Avg. Yrs on Other Quoted Boards',
       'Director Experience - Age (Yrs)',
       'Director Experience - Number of Qualifications',
       'Director Experience - Gender', 'Director Experience - Nationality Mix',
       'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total',
       'Ratios - Performance/ Total', 'Ratios - %Change from Last Period',
       'Ratios - Wealth Delta', 'Annual Direct Compensation - Salary',
       'Annual Direct Compensation - Bonus',
       'Annual Direct Compensation - D.C Pension',
       'Annual Direct Compensation - Other',
       'Annual Direct Compensation - Total Salary+Bonus',
       'Annual Direct Compensation - Total Inc. D.C. Pension & Other',
       'Annual- Equity Linked Options - Shares',
       'Annual- Equity Linked Options - LTIPS(max)',
       'Annual- Equity Linked Options - Vesting Date',
       'Annual- Equity Linked Options - Intrinsic Options (excercisable)',
       'Annual- Equity Linked Options - Intrinsic Options (unexercisable)',
       'Annual- Equity Linked Options - Estimated Options (exercisable)',
       'Annual- Equity Linked Options - Estimated Options (unexcercisable)',
       'Annual- Equity Linked Options - Share Price',
       'Annual- Equity Linked Options - Total Equity Linked Compensation',
       'Total - Total Annual Compensation', 'Accumulated Wealth - Shares',
       'Accumulated Wealth - LTIPS(max)',
       'Accumulated Wealth - Intrinsic Option',
       'Accumulated Wealth - Estimated Option',
       'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth',
       'Committee Members - AUDIT COMMITTEE MEMBER (if yes then put M)',
       'Committee Members - REMUNERATION/ COMPENSATION COMMITTEE MEMBER',
       'Committee Members - NOMINATION COMMITTEE MEMBER',
       'Committee Size - AUDIT COMMITTEE SIZE',
       'Committee Size - REMUNERATION/ COMPENSATION COMMITTEE SIZE',
       'Committee Size - NOMINATION COMMITTEE SIZE'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*', 'Individual Name', 'Characteristics of Roles - Individual Role', 'Characteristics of Roles - Director Network Size', 'Characteristics of Roles - Time to Retirement', 'Characteristics of Roles - Time in Role', 'Characteristics of Roles - Time on Board', 'Characteristics of Roles - Time in Company', 'Director Experience - Total Number of Quoted Boards to Date', 'Director Experience - Total Number of Private Boards to Date', 'Director Experience - Total Number of Other Boards to Date', 'Director Experience - Total Number of Quoted Current Boards', 'Director Experience - Total Number of Private Current Boards', 'Director Experience - Total Number of Other Current Boards', 'Director Experience - Avg. Yrs on Other Quoted Boards', 'Director Experience - Age (Yrs)', 'Director Experience - Number of Qualifications', 'Director Experience - Gender', 'Director Experience - Nationality Mix', 'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total', 'Ratios - Performance/ Total', 'Ratios - %Change from Last Period', 'Ratios - Wealth Delta', 'Annual Direct Compensation - Salary', 'Annual Direct Compensation - Bonus', 'Annual Direct Compensation - D.C Pension', 'Annual Direct Compensation - Other', 'Annual Direct Compensation - Total Salary+Bonus', 'Annual Direct Compensation - Total Inc. D.C. Pension & Other', 'Annual- Equity Linked Options - Shares', 'Annual- Equity Linked Options - LTIPS(max)', 'Annual- Equity Linked Options - Vesting Date', 'Annual- Equity Linked Options - Intrinsic Options (excercisable)', 'Annual- Equity Linked Options - Intrinsic Options (unexercisable)', 'Annual- Equity Linked Options - Estimated Options (exercisable)', 'Annual- Equity Linked Options - Estimated Options (unexcercisable)', 'Annual- Equity Linked Options - Share Price', 'Annual- Equity Linked Options - Total Equity Linked Compensation', 'Total - Total Annual Compensation', 'Accumulated Wealth - Shares', 'Accumulated Wealth - LTIPS(max)', 'Accumulated Wealth - Intrinsic Option', 'Accumulated Wealth - Estimated Option', 'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth']
df.shape: (499872, 55)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (119248, 55)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Org Summary - 1.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Company Announcements.xlsx
Unique workbook name: SMDEs Company Announcements
List of sheets to open: ['Announcements']
------
Sheet 0 : Announcements
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (69495, 10)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Announcement Date', 'Effective Date', 'CompanyID*', 'Company Name',
       'ISIN', 'DirectorID*', 'Director Name', 'Gender', 'Role',
       'Description'],
      dtype='object')
List of cols to keep (after processing): ['CompanyID*', 'Company Name', 'ISIN', 'DirectorID*', 'Director Name']
df.shape: (69495, 5)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (28851, 5)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Company Announcements.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Employment Historical NonBoard - 1.xlsx
Unique workbook name: SMDEs Profile - Employment Historical NonBoard
List of sheets to open: ['Historic Non Board Role']
------
Sheet 0 : Historic Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (500000, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date',
       'End Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index']
df.shape: (500000, 8)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (72249, 8)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Employment Historical NonBoard - 1.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Other Activities.xlsx
Unique workbook name: SMDEs Profile - Other Activities
List of sheets to open: ['Current Other Activities Tab']
------
Sheet 0 : Current Other Activities Tab
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (455287, 8)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Role', 'Role Description', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*']
df.shape: (455287, 4)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (5, 4)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Other Activities.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Director Profile - Employment Historical NonBoard - 1.xlsx
Unique workbook name: Director Profile - Employment Historical NonBoard
List of sheets to open: ['Historic Non Board Role']
------
Sheet 0 : Historic Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (499995, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date',
       'End Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index']
df.shape: (499995, 8)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (46776, 8)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Director Profile - Employment Historical NonBoard - 1.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Characteristics - 5.xlsx
Unique workbook name: SMDEs Profile - Characteristics
List of sheets to open: ['Charcteristics']
------
Sheet 0 : Charcteristics
% NaNs in first row: 73.3 > 30%, taking category = row 0 and variable name = row 1
df.shape: (164854, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender',
       'Nationality', 'Annual Report Year', 'Boards to Date - Quoted',
       'Boards to Date - Private', 'Boards to Date - Other',
       'Current Boards - Quoted', 'Current Boards - Private',
       'Current Boards - Other', 'Avg Years on Quoted Boards'],
      dtype='object')
List of cols to keep (after processing): ['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender', 'Nationality', 'Annual Report Year', 'Boards to Date - Quoted', 'Boards to Date - Private', 'Boards to Date - Other', 'Current Boards - Quoted', 'Current Boards - Private', 'Current Boards - Other', 'Avg Years on Quoted Boards']
df.shape: (164854, 15)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (164854, 15)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Characteristics - 5.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Employment Current NonBoard.xlsx
Unique workbook name: SMDEs Profile - Employment Current NonBoard
List of sheets to open: ['Current Non Board Role']
------
Sheet 0 : Current Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (410958, 14)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date']
df.shape: (410958, 14)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (34165, 14)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Employment Current NonBoard.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Director Profile - Employment Current NonBoard.xlsx
Unique workbook name: Director Profile - Employment Current NonBoard
List of sheets to open: ['Current Non Board Role']
------
Sheet 0 : Current Non Board Role
% NaNs in first row 0.0 <= 30%, taking header = row 0 as usual
df.shape: (118321, 14)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name',
       'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name',
       'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date'],
      dtype='object')
List of cols to keep (after processing): ['Country', 'DirectorID*', 'Director Name', 'CompanyID*', 'Company Name', 'Company ISIN', 'Company Ticker', 'Company Index', 'Sector Name', 'Company Type', 'Role', 'Role Description', 'ED/NED/SM', 'Start Date']
df.shape: (118321, 14)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (3578, 14)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Director Profile - Employment Current NonBoard.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Board Summary - 2.xlsx
Unique workbook name: Board Summary
List of sheets to open: ['Board Summary']
------
Sheet 0 : Board Summary
% NaNs in first row: 82.2 > 30%, taking category = row 0 and variable name = row 1
df.shape: (499940, 73)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN',
       'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*',
       'Individual Name', 'Characteristics of Roles - Individual Role',
       'Characteristics of Roles - Director Network Size',
       'Characteristics of Roles - Time to Retirement',
       'Characteristics of Roles - Time in Role',
       'Characteristics of Roles - Time on Board',
       'Characteristics of Roles - Time in Company',
       'Director Experience - Total Number of Quoted Boards to Date',
       'Director Experience - Total Number of Private Boards to Date',
       'Director Experience - Total Number of Other Boards to Date',
       'Director Experience - Total Number of Quoted Current Boards',
       'Director Experience - Total Number of Private Current Boards',
       'Director Experience - Total Number of Other Current Boards',
       'Director Experience - Avg. Yrs on Other Quoted Boards',
       'Director Experience - Age (Yrs)',
       'Director Experience - Number of Qualifications',
       'Director Experience - Gender', 'Director Experience - Nationality Mix',
       'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total',
       'Ratios - Performance/ Total', 'Ratios - %Change from Last Period',
       'Ratios - Wealth Delta',
       'Director Count Totals - Total Directors on the Board',
       'Director Count Totals - Number of SDs on Board',
       'Director Count Totals - Number of Independent NED on Board',
       'Director Count Totals - Executive Chairman present on Board or Combined role of CEO & Chairman is present (1- Yes, 0 - No)',
       'Director Count Totals - Number of Independent NED with past CFO/FD role',
       'Annual Direct Compensation - Salary',
       'Annual Direct Compensation - Bonus',
       'Annual Direct Compensation - D.C Pension',
       'Annual Direct Compensation - Other',
       'Annual Direct Compensation - Total Salary+Bonus',
       'Annual Direct Compensation - Total Inc. D.C. Pension & Other',
       'Annual- Equity Linked Options - Shares',
       'Annual- Equity Linked Options - LTIPS(max)',
       'Annual- Equity Linked Options - Vesting Date',
       'Annual- Equity Linked Options - Intrinsic Options (excercisable)',
       'Annual- Equity Linked Options - Intrinsic Options (unexercisable)',
       'Annual- Equity Linked Options - Estimated Options (exercisable)',
       'Annual- Equity Linked Options - Estimated Options (unexcercisable)',
       'Annual- Equity Linked Options - Share Price',
       'Annual- Equity Linked Options - Total Equity Linked Compensation',
       'Total - Total Annual Compensation', 'Accumulated Wealth - Shares',
       'Accumulated Wealth - LTIPS(max)',
       'Accumulated Wealth - Intrinsic Option',
       'Accumulated Wealth - Estimated Option',
       'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth',
       'Committee Members - AUDIT COMMITTEE MEMBER (if yes then put M)',
       'Committee Members - REMUNERATION/ COMPENSATION COMMITTEE MEMBER',
       'Committee Members - NOMINATION COMMITTEE MEMBER',
       'Committee Size - AUDIT COMMITTEE SIZE',
       'Committee Size - REMUNERATION/ COMPENSATION COMMITTEE SIZE',
       'Committee Size - NOMINATION COMMITTEE SIZE',
       'Number of Independent NEDs in Committee - Number of Independent NED on Audit Committee',
       'Number of Independent NEDs in Committee - Number of Independent NED on Remuneration/ Compensation Committee',
       'Number of Independent NEDs in Committee - Number of Independent NED on Nomination Committee',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Audit (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Remuneration/ Compensation (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Nomination (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED with functional expertise on Audit Committee'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*', 'Individual Name', 'Characteristics of Roles - Individual Role', 'Characteristics of Roles - Director Network Size', 'Characteristics of Roles - Time to Retirement', 'Characteristics of Roles - Time in Role', 'Characteristics of Roles - Time on Board', 'Characteristics of Roles - Time in Company', 'Director Experience - Total Number of Quoted Boards to Date', 'Director Experience - Total Number of Private Boards to Date', 'Director Experience - Total Number of Other Boards to Date', 'Director Experience - Total Number of Quoted Current Boards', 'Director Experience - Total Number of Private Current Boards', 'Director Experience - Total Number of Other Current Boards', 'Director Experience - Avg. Yrs on Other Quoted Boards', 'Director Experience - Age (Yrs)', 'Director Experience - Number of Qualifications', 'Director Experience - Gender', 'Director Experience - Nationality Mix', 'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total', 'Ratios - Performance/ Total', 'Ratios - %Change from Last Period', 'Ratios - Wealth Delta', 'Director Count Totals - Number of Independent NED with past CFO/FD role', 'Annual Direct Compensation - Salary', 'Annual Direct Compensation - Bonus', 'Annual Direct Compensation - D.C Pension', 'Annual Direct Compensation - Other', 'Annual Direct Compensation - Total Salary+Bonus', 'Annual Direct Compensation - Total Inc. D.C. Pension & Other', 'Annual- Equity Linked Options - Shares', 'Annual- Equity Linked Options - LTIPS(max)', 'Annual- Equity Linked Options - Vesting Date', 'Annual- Equity Linked Options - Intrinsic Options (excercisable)', 'Annual- Equity Linked Options - Intrinsic Options (unexercisable)', 'Annual- Equity Linked Options - Estimated Options (exercisable)', 'Annual- Equity Linked Options - Estimated Options (unexcercisable)', 'Annual- Equity Linked Options - Share Price', 'Annual- Equity Linked Options - Total Equity Linked Compensation', 'Total - Total Annual Compensation', 'Accumulated Wealth - Shares', 'Accumulated Wealth - LTIPS(max)', 'Accumulated Wealth - Intrinsic Option', 'Accumulated Wealth - Estimated Option', 'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth']
df.shape: (499940, 56)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (165138, 56)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Board Summary - 2.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - SMDEs Profile - Characteristics - 3.xlsx
Unique workbook name: SMDEs Profile - Characteristics
List of sheets to open: ['Charcteristics']
------
Sheet 0 : Charcteristics
% NaNs in first row: 73.3 > 30%, taking category = row 0 and variable name = row 1
df.shape: (499996, 15)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender',
       'Nationality', 'Annual Report Year', 'Boards to Date - Quoted',
       'Boards to Date - Private', 'Boards to Date - Other',
       'Current Boards - Quoted', 'Current Boards - Private',
       'Current Boards - Other', 'Avg Years on Quoted Boards'],
      dtype='object')
List of cols to keep (after processing): ['Director Name', 'DirectorID*', 'Age', 'DOB', 'DOD', 'Gender', 'Nationality', 'Annual Report Year', 'Boards to Date - Quoted', 'Boards to Date - Private', 'Boards to Date - Other', 'Current Boards - Quoted', 'Current Boards - Private', 'Current Boards - Other', 'Avg Years on Quoted Boards']
df.shape: (499996, 15)
Done!
---
Filtering df by rows:
---
No column found that contains 'companyid', not filtering by rows.
df.shape: (499996, 15)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - SMDEs Profile - Characteristics - 3.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Board Summary - 1.xlsx
Unique workbook name: Board Summary
List of sheets to open: ['Board Summary']
------
Sheet 0 : Board Summary
% NaNs in first row: 82.2 > 30%, taking category = row 0 and variable name = row 1
df.shape: (499988, 73)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN',
       'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*',
       'Individual Name', 'Characteristics of Roles - Individual Role',
       'Characteristics of Roles - Director Network Size',
       'Characteristics of Roles - Time to Retirement',
       'Characteristics of Roles - Time in Role',
       'Characteristics of Roles - Time on Board',
       'Characteristics of Roles - Time in Company',
       'Director Experience - Total Number of Quoted Boards to Date',
       'Director Experience - Total Number of Private Boards to Date',
       'Director Experience - Total Number of Other Boards to Date',
       'Director Experience - Total Number of Quoted Current Boards',
       'Director Experience - Total Number of Private Current Boards',
       'Director Experience - Total Number of Other Current Boards',
       'Director Experience - Avg. Yrs on Other Quoted Boards',
       'Director Experience - Age (Yrs)',
       'Director Experience - Number of Qualifications',
       'Director Experience - Gender', 'Director Experience - Nationality Mix',
       'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total',
       'Ratios - Performance/ Total', 'Ratios - %Change from Last Period',
       'Ratios - Wealth Delta',
       'Director Count Totals - Total Directors on the Board',
       'Director Count Totals - Number of SDs on Board',
       'Director Count Totals - Number of Independent NED on Board',
       'Director Count Totals - Executive Chairman present on Board or Combined role of CEO & Chairman is present (1- Yes, 0 - No)',
       'Director Count Totals - Number of Independent NED with past CFO/FD role',
       'Annual Direct Compensation - Salary',
       'Annual Direct Compensation - Bonus',
       'Annual Direct Compensation - D.C Pension',
       'Annual Direct Compensation - Other',
       'Annual Direct Compensation - Total Salary+Bonus',
       'Annual Direct Compensation - Total Inc. D.C. Pension & Other',
       'Annual- Equity Linked Options - Shares',
       'Annual- Equity Linked Options - LTIPS(max)',
       'Annual- Equity Linked Options - Vesting Date',
       'Annual- Equity Linked Options - Intrinsic Options (excercisable)',
       'Annual- Equity Linked Options - Intrinsic Options (unexercisable)',
       'Annual- Equity Linked Options - Estimated Options (exercisable)',
       'Annual- Equity Linked Options - Estimated Options (unexcercisable)',
       'Annual- Equity Linked Options - Share Price',
       'Annual- Equity Linked Options - Total Equity Linked Compensation',
       'Total - Total Annual Compensation', 'Accumulated Wealth - Shares',
       'Accumulated Wealth - LTIPS(max)',
       'Accumulated Wealth - Intrinsic Option',
       'Accumulated Wealth - Estimated Option',
       'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth',
       'Committee Members - AUDIT COMMITTEE MEMBER (if yes then put M)',
       'Committee Members - REMUNERATION/ COMPENSATION COMMITTEE MEMBER',
       'Committee Members - NOMINATION COMMITTEE MEMBER',
       'Committee Size - AUDIT COMMITTEE SIZE',
       'Committee Size - REMUNERATION/ COMPENSATION COMMITTEE SIZE',
       'Committee Size - NOMINATION COMMITTEE SIZE',
       'Number of Independent NEDs in Committee - Number of Independent NED on Audit Committee',
       'Number of Independent NEDs in Committee - Number of Independent NED on Remuneration/ Compensation Committee',
       'Number of Independent NEDs in Committee - Number of Independent NED on Nomination Committee',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Audit (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Remuneration/ Compensation (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Nomination (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED with functional expertise on Audit Committee'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*', 'Individual Name', 'Characteristics of Roles - Individual Role', 'Characteristics of Roles - Director Network Size', 'Characteristics of Roles - Time to Retirement', 'Characteristics of Roles - Time in Role', 'Characteristics of Roles - Time on Board', 'Characteristics of Roles - Time in Company', 'Director Experience - Total Number of Quoted Boards to Date', 'Director Experience - Total Number of Private Boards to Date', 'Director Experience - Total Number of Other Boards to Date', 'Director Experience - Total Number of Quoted Current Boards', 'Director Experience - Total Number of Private Current Boards', 'Director Experience - Total Number of Other Current Boards', 'Director Experience - Avg. Yrs on Other Quoted Boards', 'Director Experience - Age (Yrs)', 'Director Experience - Number of Qualifications', 'Director Experience - Gender', 'Director Experience - Nationality Mix', 'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total', 'Ratios - Performance/ Total', 'Ratios - %Change from Last Period', 'Ratios - Wealth Delta', 'Director Count Totals - Number of Independent NED with past CFO/FD role', 'Annual Direct Compensation - Salary', 'Annual Direct Compensation - Bonus', 'Annual Direct Compensation - D.C Pension', 'Annual Direct Compensation - Other', 'Annual Direct Compensation - Total Salary+Bonus', 'Annual Direct Compensation - Total Inc. D.C. Pension & Other', 'Annual- Equity Linked Options - Shares', 'Annual- Equity Linked Options - LTIPS(max)', 'Annual- Equity Linked Options - Vesting Date', 'Annual- Equity Linked Options - Intrinsic Options (excercisable)', 'Annual- Equity Linked Options - Intrinsic Options (unexercisable)', 'Annual- Equity Linked Options - Estimated Options (exercisable)', 'Annual- Equity Linked Options - Estimated Options (unexcercisable)', 'Annual- Equity Linked Options - Share Price', 'Annual- Equity Linked Options - Total Equity Linked Compensation', 'Total - Total Annual Compensation', 'Accumulated Wealth - Shares', 'Accumulated Wealth - LTIPS(max)', 'Accumulated Wealth - Intrinsic Option', 'Accumulated Wealth - Estimated Option', 'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth']
df.shape: (499988, 56)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (112479, 56)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Board Summary - 1.xlsx
Done!
-----------------------------------------------------------
File name (kept): NA - Board Summary - 3.xlsx
Unique workbook name: Board Summary
List of sheets to open: ['Board Summary']
------
Sheet 0 : Board Summary
% NaNs in first row: 82.2 > 30%, taking category = row 0 and variable name = row 1
df.shape: (190322, 73)
---
Filtering df by columns:
---
df.columns (after processing): Index(['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN',
       'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*',
       'Individual Name', 'Characteristics of Roles - Individual Role',
       'Characteristics of Roles - Director Network Size',
       'Characteristics of Roles - Time to Retirement',
       'Characteristics of Roles - Time in Role',
       'Characteristics of Roles - Time on Board',
       'Characteristics of Roles - Time in Company',
       'Director Experience - Total Number of Quoted Boards to Date',
       'Director Experience - Total Number of Private Boards to Date',
       'Director Experience - Total Number of Other Boards to Date',
       'Director Experience - Total Number of Quoted Current Boards',
       'Director Experience - Total Number of Private Current Boards',
       'Director Experience - Total Number of Other Current Boards',
       'Director Experience - Avg. Yrs on Other Quoted Boards',
       'Director Experience - Age (Yrs)',
       'Director Experience - Number of Qualifications',
       'Director Experience - Gender', 'Director Experience - Nationality Mix',
       'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total',
       'Ratios - Performance/ Total', 'Ratios - %Change from Last Period',
       'Ratios - Wealth Delta',
       'Director Count Totals - Total Directors on the Board',
       'Director Count Totals - Number of SDs on Board',
       'Director Count Totals - Number of Independent NED on Board',
       'Director Count Totals - Executive Chairman present on Board or Combined role of CEO & Chairman is present (1- Yes, 0 - No)',
       'Director Count Totals - Number of Independent NED with past CFO/FD role',
       'Annual Direct Compensation - Salary',
       'Annual Direct Compensation - Bonus',
       'Annual Direct Compensation - D.C Pension',
       'Annual Direct Compensation - Other',
       'Annual Direct Compensation - Total Salary+Bonus',
       'Annual Direct Compensation - Total Inc. D.C. Pension & Other',
       'Annual- Equity Linked Options - Shares',
       'Annual- Equity Linked Options - LTIPS(max)',
       'Annual- Equity Linked Options - Vesting Date',
       'Annual- Equity Linked Options - Intrinsic Options (excercisable)',
       'Annual- Equity Linked Options - Intrinsic Options (unexercisable)',
       'Annual- Equity Linked Options - Estimated Options (exercisable)',
       'Annual- Equity Linked Options - Estimated Options (unexcercisable)',
       'Annual- Equity Linked Options - Share Price',
       'Annual- Equity Linked Options - Total Equity Linked Compensation',
       'Total - Total Annual Compensation', 'Accumulated Wealth - Shares',
       'Accumulated Wealth - LTIPS(max)',
       'Accumulated Wealth - Intrinsic Option',
       'Accumulated Wealth - Estimated Option',
       'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth',
       'Committee Members - AUDIT COMMITTEE MEMBER (if yes then put M)',
       'Committee Members - REMUNERATION/ COMPENSATION COMMITTEE MEMBER',
       'Committee Members - NOMINATION COMMITTEE MEMBER',
       'Committee Size - AUDIT COMMITTEE SIZE',
       'Committee Size - REMUNERATION/ COMPENSATION COMMITTEE SIZE',
       'Committee Size - NOMINATION COMMITTEE SIZE',
       'Number of Independent NEDs in Committee - Number of Independent NED on Audit Committee',
       'Number of Independent NEDs in Committee - Number of Independent NED on Remuneration/ Compensation Committee',
       'Number of Independent NEDs in Committee - Number of Independent NED on Nomination Committee',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Audit (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Remuneration/ Compensation (excluding Chairman Independent NED)',
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED on Nomination (excluding Chairman Independent NED)',
/home/jasonjia/.local/lib/python3.8/site-packages/openpyxl/worksheet/_reader.py:329: UserWarning: Conditional Formatting extension is not supported and will be removed
  warn(msg)
       'Independent NEDs excluding Chairman Independent NED - Number of Independent NED with functional expertise on Audit Committee'],
      dtype='object')
List of cols to keep (after processing): ['Annual Report Year', 'Country', 'CompanyID*', 'Company Name', 'ISIN', 'Ticker', 'Index', 'Sector', 'Director Type', 'DirectorID*', 'Individual Name', 'Characteristics of Roles - Individual Role', 'Characteristics of Roles - Director Network Size', 'Characteristics of Roles - Time to Retirement', 'Characteristics of Roles - Time in Role', 'Characteristics of Roles - Time on Board', 'Characteristics of Roles - Time in Company', 'Director Experience - Total Number of Quoted Boards to Date', 'Director Experience - Total Number of Private Boards to Date', 'Director Experience - Total Number of Other Boards to Date', 'Director Experience - Total Number of Quoted Current Boards', 'Director Experience - Total Number of Private Current Boards', 'Director Experience - Total Number of Other Current Boards', 'Director Experience - Avg. Yrs on Other Quoted Boards', 'Director Experience - Age (Yrs)', 'Director Experience - Number of Qualifications', 'Director Experience - Gender', 'Director Experience - Nationality Mix', 'Ratios - Bonus/ (Bonus&Salary)', 'Ratios - Equity Linked/ Total', 'Ratios - Performance/ Total', 'Ratios - %Change from Last Period', 'Ratios - Wealth Delta', 'Director Count Totals - Number of Independent NED with past CFO/FD role', 'Annual Direct Compensation - Salary', 'Annual Direct Compensation - Bonus', 'Annual Direct Compensation - D.C Pension', 'Annual Direct Compensation - Other', 'Annual Direct Compensation - Total Salary+Bonus', 'Annual Direct Compensation - Total Inc. D.C. Pension & Other', 'Annual- Equity Linked Options - Shares', 'Annual- Equity Linked Options - LTIPS(max)', 'Annual- Equity Linked Options - Vesting Date', 'Annual- Equity Linked Options - Intrinsic Options (excercisable)', 'Annual- Equity Linked Options - Intrinsic Options (unexercisable)', 'Annual- Equity Linked Options - Estimated Options (exercisable)', 'Annual- Equity Linked Options - Estimated Options (unexcercisable)', 'Annual- Equity Linked Options - Share Price', 'Annual- Equity Linked Options - Total Equity Linked Compensation', 'Total - Total Annual Compensation', 'Accumulated Wealth - Shares', 'Accumulated Wealth - LTIPS(max)', 'Accumulated Wealth - Intrinsic Option', 'Accumulated Wealth - Estimated Option', 'Accumulated Wealth - Liquid Wealth', 'Total Wealth - Total Wealth']
df.shape: (190322, 56)
Done!
---
Filtering df by rows:
---
Found column that contains 'companyid', filtering by rows.
df.shape: (44033, 56)
df saved to: /project/kh_mercury_1/manager_and_board_characteristics/output/02_get_initial_datasets/02.1_boardex_filtered_by_columns_and_rows/NA - Board Summary - 3.xlsx
Done!
-----------------------------------------------------------
List of files kept: ['Europe - Company Announcements.xlsx', 'Europe - SMDEs Profile - Characteristics - 1.xlsx', 'Europe - SMDEs Mapping File.xlsx', 'Europe - SMDEs Org Summary - 2.xlsx', 'Europe - SMDEs Profile - Employment Current Board.xlsx', 'Europe - Org Analysis Averages.xlsx', 'Europe - SMDEs Profile - Employment Historical Board.xlsx', 'Europe - Company Details.xlsx', 'Europe - Director Profile - Other Activities.xlsx', 'Europe - SMDEs Profile - Characteristics - 2.xlsx', 'Europe - Director Profile - Education & Achievements.xlsx', 'Europe - Director Profile - Characteristics.xlsx', 'Europe - Director Profile - Employment Historical NonBoard.xlsx', 'Europe - SMDEs Committee Details.xlsx', 'Europe - SMDEs Profile - Employment Current NonBoard.xlsx', 'Europe - Director Profile - Employment Current NonBoard.xlsx', 'Europe - Board Summary.xlsx', 'Europe - SMDEs Company Announcements.xlsx', 'Europe - Director Details Mapping File.xlsx', 'Europe - Director Profile - Employment Historical Board.xlsx', 'Europe - SMDEs Profile - Education & Achievements.xlsx', 'Europe - SMDEs Profile - Other Activities.xlsx', 'Europe - Director Profile - Employment Current Board.xlsx', 'Europe - SMDEs Profile - Employment Historical NonBoard - 1.xlsx', 'Europe - Committee Details.xlsx', 'NA - Director Profile - Employment Historical Board - 1.xlsx', 'NA - SMDEs Profile - Employment Historical NonBoard - 4.xlsx', 'NA - SMDEs Profile - Employment Historical NonBoard - 5.xlsx', 'NA - Org Analysis Averages.xlsx', 'NA - SMDEs Mapping File.xlsx', 'NA - SMDEs Profile - Characteristics - 2.xlsx', 'NA - Company Details.xlsx', 'NA - SMDEs Profile - Characteristics - 4.xlsx', 'NA - SMDEs Profile - Characteristics - 1.xlsx', 'NA - SMDEs Profile - Employment Historical NonBoard - 2.xlsx', 'NA - Committee Details.xlsx', 'NA - Director Profile - Education & Achievements.xlsx', 'NA - SMDEs Committee Details.xlsx', 'NA - SMDEs Org Summary - 1.xlsx', 'NA - SMDEs Company Announcements.xlsx', 'NA - SMDEs Profile - Employment Historical NonBoard - 1.xlsx', 'NA - SMDEs Profile - Other Activities.xlsx', 'NA - Director Profile - Employment Historical NonBoard - 1.xlsx', 'NA - SMDEs Profile - Characteristics - 5.xlsx', 'NA - SMDEs Profile - Employment Current NonBoard.xlsx', 'NA - Director Profile - Employment Current NonBoard.xlsx', 'NA - Board Summary - 2.xlsx', 'NA - SMDEs Profile - Characteristics - 3.xlsx', 'NA - Board Summary - 1.xlsx', 'NA - Board Summary - 3.xlsx']
------
List of files not kept: []
Done!
